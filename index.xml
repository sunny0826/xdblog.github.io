<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MaoXian Play on MaoXian Play</title>
    <link>https://blog.maoxianplay.com/</link>
    <description>Recent content in MaoXian Play on MaoXian Play</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Aug 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>This One Goes to 11!</title>
      <link>https://blog.maoxianplay.com/2018/0.48-relnotes/</link>
      <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.48-relnotes/</guid>
      <description>

&lt;p&gt;Hugo &lt;code&gt;0.48&lt;/code&gt; is built with the brand new Go 1.11. On the technical side this means that Hugo now uses &lt;a href=&#34;https://github.com/golang/go/wiki/Modules&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Go Modules&lt;/a&gt; for the build. The big new functional thing in Go 1.11 for Hugo is added support for &lt;a href=&#34;https://github.com/golang/go/issues/10608&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;variable overwrites&lt;/a&gt;. This means that you can now do this and get the expected result:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{ $var := &amp;quot;Hugo Page&amp;quot; }}
{{ if .IsHome }}
	{{ $var = &amp;quot;Hugo Home&amp;quot; }}
{{ end }}
Var is {{ $var }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above may look obvious, but has not been possible until now. In Hugo we have had &lt;code&gt;.Scratch&lt;/code&gt; as a workaround for this, but Go 1.11 will help clean up a lot of templates.&lt;/p&gt;

&lt;p&gt;This release represents &lt;strong&gt;23 contributions by 5 contributors&lt;/strong&gt; to the main Hugo code base. &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; leads the Hugo development with a significant amount of contributions, but also a big shoutout to &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;, &lt;a href=&#34;https://github.com/vsopvsop&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vsopvsop&lt;/a&gt;, and &lt;a href=&#34;https://github.com/moorereason&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@moorereason&lt;/a&gt; for their ongoing contributions. And a big thanks to &lt;a href=&#34;https://github.com/digitalcraftsman&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@digitalcraftsman&lt;/a&gt; for his relentless work on keeping the themes site in pristine condition and to &lt;a href=&#34;https://github.com/kaushalmodi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@kaushalmodi&lt;/a&gt; for his great work on the documentation site.&lt;/p&gt;

&lt;p&gt;Many have also been busy writing and fixing the documentation in &lt;a href=&#34;https://github.com/gohugoio/hugoDocs&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugoDocs&lt;/a&gt;,
which has received &lt;strong&gt;15 contributions by 12 contributors&lt;/strong&gt;. A special thanks to &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;, &lt;a href=&#34;https://github.com/kaushalmodi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@kaushalmodi&lt;/a&gt;, &lt;a href=&#34;https://github.com/regisphilibert&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@regisphilibert&lt;/a&gt;, and &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt; for their work on the documentation site.&lt;/p&gt;

&lt;p&gt;Hugo now has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;28275+ &lt;a href=&#34;https://github.com/gohugoio/hugo/stargazers&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;441+ &lt;a href=&#34;https://github.com/gohugoio/hugo/graphs/contributors&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;252+ &lt;a href=&#34;http://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add a test for template variable overwrite &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0c8a4154838e32a33d34202fd4fa0187aa502190&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;0c8a4154&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Include language code in REF_NOT_FOUND errors &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/94d0e79d33994b9a9d26a4d020500acdcc71e58c&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;94d0e79d&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5110&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5110&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve minifier MIME type resolution &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/ebb56e8bdbfaf4f955326017e40b2805850871e9&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ebb56e8b&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5093&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5093&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update to Go 1.11 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/6b9934a26615ea614b1774770532cae9762a58d3&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;6b9934a2&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5115&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set GO111MODULE=on for mage install &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c7f057797ca7bfc781d5a2bbf181bb52360f160f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c7f05779&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5115&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add instruction to install PostCSS when missing &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/08d14113b60ff70ffe922e8098e289b099a70e0f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;08d14113&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5111&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5111&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update snapcraft build config to Go 1.11 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/94d6d6780fac78e9ed5ed58ecdb9821ad8f0f27c&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;94d6d678&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5115&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use Go 1.11 modules with Mage &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/45c9c45d1d0d99443fa6bb524a1265fa9ba95e0e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;45c9c45d&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5115&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add go.mod &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/fce32c07fb80e9929bc2660cf1e681e93009d24b&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;fce32c07&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5115&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update Travis to Go 1.11 and Go 1.10.4 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d32ff16fd61f55874e81d73759afa099b8bdcb57&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d32ff16f&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5115&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5115&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Skip installing postcss due to failure on build server &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/66f688f7120560ca787c1a23e3e7fbc3aa617956&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;66f688f7&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Keep end tags &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e6eda2a370aa1184e0afaf12e95dbd6f8b63ace5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e6eda2a3&lt;/a&gt; &lt;a href=&#34;https://github.com/vsopvsop&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vsopvsop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix permissions when creating new folders &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/f4675fa0f0fae2358adfaea49e8da824ee094495&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;f4675fa0&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5128&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5128&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix handling of taxonomy terms containing slashes &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/fff132537b4094221f4f099e2251f3cda613060f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;fff13253&lt;/a&gt; &lt;a href=&#34;https://github.com/moorereason&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@moorereason&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4090&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4090&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix build on armv7 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/8999de193c18b7aa07b44e5b7d9f443a8572e117&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;8999de19&lt;/a&gt; &lt;a href=&#34;https://github.com/caarlos0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@caarlos0&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5101&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5101&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Two Bug Fixes</title>
      <link>https://blog.maoxianplay.com/2018/0.47.1-relnotes/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.47.1-relnotes/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;This is a bug-fix release with two fixes.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;fixes&#34;&gt;Fixes&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Fix .Site.Params case regression &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/fdff0d3af4670f7079e539fef4b92af2a866d02d&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;fdff0d3a&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5094&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5094&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do not strip IE conditional statements &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/5a0ee2b934e38d596da0f9742361f81c1221e3d5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;5a0ee2b9&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5089&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5089&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;updates-to-linux-snap-build&#34;&gt;Updates to Linux Snap build&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Remove unused files from Git, Perl, etc. &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/834617f9f8d870643b2631fe607471c8e2ef2f47&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;834617f9&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add nodejs to allow PostCSS to work &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/ef20ec1fbaa8f5841b3fbe18978d4d8c19d8fc53&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ef20ec1f&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Output Minification, Live-Reload Fixes and More</title>
      <link>https://blog.maoxianplay.com/2018/0.47-relnotes/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.47-relnotes/</guid>
      <description>

&lt;p&gt;Hugo &lt;code&gt;0.47&lt;/code&gt; is named &lt;strong&gt;Hugo Reloaded&lt;/strong&gt;. It adds minification support for the final rendered output (run &lt;code&gt;hugo --minify&lt;/code&gt;), but it is mostly a bug fix release. And most notably, it fixes a set of issues with live-reloading/partial rebuilds when running &lt;code&gt;hugo server&lt;/code&gt;. Working with bundles should now be a more pleasant experience, to pick one example.&lt;/p&gt;

&lt;p&gt;This release represents &lt;strong&gt;35 contributions by 6 contributors&lt;/strong&gt; to the main Hugo code base.
&lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; leads the Hugo development with a significant amount of contributions, but also a big shoutout to &lt;a href=&#34;https://github.com/satotake&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@satotake&lt;/a&gt;, &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;, and &lt;a href=&#34;https://github.com/coliff&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@coliff&lt;/a&gt; for their ongoing contributions.&lt;/p&gt;

&lt;p&gt;And a big thanks to &lt;a href=&#34;https://github.com/digitalcraftsman&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@digitalcraftsman&lt;/a&gt; and &lt;a href=&#34;https://github.com/onedrawingperday&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@onedrawingperday&lt;/a&gt;  for their relentless work on keeping the themes site in pristine condition and to &lt;a href=&#34;https://github.com/kaushalmodi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@kaushalmodi&lt;/a&gt; for his great work on the documentation site.&lt;/p&gt;

&lt;p&gt;Many have also been busy writing and fixing the documentation in &lt;a href=&#34;https://github.com/gohugoio/hugoDocs&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugoDocs&lt;/a&gt;,
which has received &lt;strong&gt;21 contributions by 10 contributors&lt;/strong&gt;. A special thanks to &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;, &lt;a href=&#34;https://github.com/aapeliv&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@aapeliv&lt;/a&gt;, &lt;a href=&#34;https://github.com/regisphilibert&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@regisphilibert&lt;/a&gt;, and &lt;a href=&#34;https://github.com/brentybh&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@brentybh&lt;/a&gt; for their work on the documentation site.&lt;/p&gt;

&lt;p&gt;Hugo now has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;27980+ &lt;a href=&#34;https://github.com/gohugoio/hugo/stargazers&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;442+ &lt;a href=&#34;https://github.com/gohugoio/hugo/graphs/contributors&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;251+ &lt;a href=&#34;http://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;h3 id=&#34;templates&#34;&gt;Templates&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Suppress blank lines from opengraph internal template &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c09ee78fd235599d3fb794110cd75c024d80cfca&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c09ee78f&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add MIME type to embedded JS &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/755d1ffe7a22d8ad83485240ff78cf25d501602f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;755d1ffe&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5042&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5042&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;os.Stat&lt;/code&gt; template function &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d71120852a8e14d0ea4d24de269fce041ef7b666&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d7112085&lt;/a&gt; &lt;a href=&#34;https://github.com/satotake&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@satotake&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;output&#34;&gt;Output&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add support for minification of final output &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/789ef8c639e4621abd36da530bcb5942ac9297da&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;789ef8c6&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1251&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#1251&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Regenerate CLI docs &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/4a16b5f4b0adbb31fee611c378de9d5526de2f86&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;4a16b5f4&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Include theme name in version mismatch error &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e5052f4e09b6df590cddf2f8bc2c834fd3af3082&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e5052f4e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5044&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5044&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make the JS minifier matcher less specific &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c81fbf4625ae7cc7dd3a7a526331ddfdf5237cc6&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c81fbf46&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5073&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5073&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Close file when done &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/f6ae436c5878bafeafa0bb2646a2c9b32c9b4380&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;f6ae436c&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5062&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5062&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;https links to 3rd party sites &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c2a6741394bc609a663522b245d3d75f0ad17da4&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c2a67413&lt;/a&gt; &lt;a href=&#34;https://github.com/coliff&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@coliff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update alias.go &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/06bd0136419ebd6727635716c7023494cc5a8257&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;06bd0136&lt;/a&gt; &lt;a href=&#34;https://github.com/coliff&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@coliff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Remove test debug &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/fb3cb05cc3dfc50370449f622fb0130ba7e0ced2&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;fb3cb05c&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update dependencies &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d07882dfb76a65cce79aaa6f27df71279cd30600&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d07882df&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update Chroma &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/7f5356717d14079432365974e1424fc4ff5987c9&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;7f535671&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5025&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5025&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Remove alias of os.Stat &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/71931b30b1813b146aaa60f5cdab16c0f9ebebdb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;71931b30&lt;/a&gt; &lt;a href=&#34;https://github.com/satotake&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@satotake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Renmae FileStat Stat &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d40116e5f941e4734ed3bed69dce8ffe11fc76b2&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d40116e5&lt;/a&gt; &lt;a href=&#34;https://github.com/satotake&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@satotake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduce allocation in the benchmark itself &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/a6b1eb1e9150aa5c1c86fe7424cc4167d6f59a5a&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;a6b1eb1e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simplify the 0 transformer case &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/27110133ffca05feae2e11a9ff28a9a00f613350&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;27110133&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;h3 id=&#34;templates-1&#34;&gt;Templates&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix compiling Amber templates that import other templates &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/37438757788d279c839506d54f460b2ab37db164&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;37438757&lt;/a&gt; &lt;a href=&#34;https://github.com/Stebalien&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@Stebalien&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reimplement the &amp;ldquo;.Params tolower&amp;rdquo; template transformer &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/5c5384916e8f954f3ea66148ecceb3732584588e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;5c538491&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5068&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5068&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;output-1&#34;&gt;Output&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix Resource output in multihost setups &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/78f8475a054a6277d37f13329afd240b00dc9408&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;78f8475a&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5058&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5058&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;core&#34;&gt;Core&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Force render of any changed page, even in Fast Render Mode &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/2247546017c00201d2ce1232dd5303295451f1cc&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;22475460&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5083&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5083&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add configFile(s) back to the watch list after REMOVE event &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/abc54080ec8c43e8989c081d934b59f0c9570c0b&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;abc54080&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4701&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4701&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gracefully handle typos in server config when running the server &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/a655e00d702dbc20b3961b131b33ab21841b043d&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;a655e00d&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5081&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5081&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix shortcode output wrapped in p &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/78c99463fdd45c91af9933528d12d36a86dc6482&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;78c99463&lt;/a&gt; &lt;a href=&#34;https://github.com/gllera&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@gllera&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1642&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#1642&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adjust tests for shortcode p-issue &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/baa62d0abbbf24a17d0aa800a4bb217f026c49ad&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;baa62d0a&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1642&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#1642&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix image cache-clearing for sub-languages &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/9d973004f5379cff2adda489566fe40683553c4c&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;9d973004&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5084&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5084&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix error when deleting a bundle in server mode &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0a88741fe85f4f7aedc02ed748dfeb8ccc073dbf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;0a88741f&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5077&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5077&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix Related when called from shortcode &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0dd06bdac008aa81ec2e8f29ad8110dac0227011&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;0dd06bda&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5071&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5071&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the interface value when doing Related search &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/a6f199f7a640161333608b4a843d701f7e182829&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;a6f199f7&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5071&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5071&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix GitInfo when multiple content dirs &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/2182ecfd34a24521bf0e3c939627a55327eb1e19&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;2182ecfd&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5054&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5054&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add multiple content dirs to GitInfo test site &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e85833d868a902840c5ed1c90713256153b2548b&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e85833d8&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5054&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5054&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix &amp;ldquo;adding a bundle&amp;rdquo; in server mode &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d139a037d98e4b388687eecb7831758412247c58&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d139a037&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5075&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5075&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix typo &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c362634b7d8802ea81b0b4341c800a9f78f7cd7c&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c362634b&lt;/a&gt; &lt;a href=&#34;https://github.com/satotake&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@satotake&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://blog.maoxianplay.com/about/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/about/</guid>
      <description>&lt;p&gt;郭旭东，是一名在上海工作的devops工程师，目前就职于&lt;a href=&#34;https://www.keking.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;上海凯京科技&lt;/a&gt;，对新技术，尤其是devops方面的技术有着强烈的好奇与不懈的追求，欢迎加入&lt;a href=&#34;https://www.keking.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;上海凯京科技&lt;/a&gt;，一起探索与创造更好更合适的devops理念。简历可以通过首页的联系方式投递。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Summer of Hugo</title>
      <link>https://blog.maoxianplay.com/2018/0.46-relnotes/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.46-relnotes/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;**Hugo 0.46** is the closing credits to **The Summer of Hugo**. While most people have been relaxing on the beach, Hugo has been really busy: 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0.42, June 12, 2018&lt;/strong&gt;: &lt;a href=&#34;https://gohugo.io/news/0.42-relnotes/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Theme Composition and Inheritance!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;0.43, July 9, 2018&lt;/strong&gt;: &lt;a href=&#34;https://gohugo.io/news/0.43-relnotes/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo Pipes!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was followed by some more technical follow-up releases. And today, when July has turned into August, we come with another one. It&amp;rsquo;s not a big release. But with the big interest in &lt;strong&gt;Hugo Pipes&lt;/strong&gt;, we felt that it was important to get this out there sooner rather than later.&lt;/p&gt;

&lt;p&gt;There are two main items in this release:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We have added a custom SCSS/SASS import resolver that respects Hugo&amp;rsquo;s project/themes filesystem hierarchy anywhere in &lt;code&gt;/assets&lt;/code&gt;. Using the LibSass&amp;rsquo; resolver alone only made this work for the entry folder.&lt;/li&gt;
&lt;li&gt;Resources fetched via &lt;code&gt;resources.Get&lt;/code&gt; and similar are now language agnostic. The thought behind the original implementation was maximum flexibility with support for &lt;code&gt;assetDir&lt;/code&gt; per language. In practice, this was a bad idea, as it made some CSS imports hard to get working in multilingual setups, and you got duplication of identical content for no good reason, with added processing time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This release represents &lt;strong&gt;12 contributions by 2 contributors&lt;/strong&gt; to the main Hugo code base.&lt;/p&gt;

&lt;p&gt;A special thanks in this release goes to &lt;a href=&#34;https://github.com/onedrawingperday&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@onedrawingperday&lt;/a&gt; for his excellent work maintaining the fast-growing &lt;a href=&#34;https://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Themes Site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many have also been busy writing and fixing the documentation in &lt;a href=&#34;https://github.com/gohugoio/hugoDocs&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugoDocs&lt;/a&gt;,
which has received &lt;strong&gt;5 contributions by 3 contributors&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hugo now has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;27596+ &lt;a href=&#34;https://github.com/gohugoio/hugo/stargazers&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;442+ &lt;a href=&#34;https://github.com/gohugoio/hugo/graphs/contributors&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;245+ &lt;a href=&#34;http://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Resources fetched via &lt;code&gt;resources.Get&lt;/code&gt; and similar are now considered global across languages. If you need, as an example, to create a CSS per language, you need to set the path yourself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;templates.Exists&lt;/code&gt; template function. This can be used to check if a template, e.g. a partial, exists in the project or any of the themes in use. &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0ba19c57f180c33b41c64335ea1d1c89335d34c0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;0ba19c57&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5010&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5010&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Remove superflous loop &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0afa2897a0cf90f4348929ef432202efddc183a0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;0afa2897&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update Chroma &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/b5d13ca16bf106c1bc29c2a5295cd231d1bf13fd&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;b5d13ca1&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5019&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make resources fetched via &lt;code&gt;resources.Get&lt;/code&gt; and similar language agnostic &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/6b02f5c0f4e0ba1730aebc5a590a111548233bd5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;6b02f5c0&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5017&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve SCSS project vs themes import resolution &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/f219ac09f6b7e26d84599401512233d77c1bdb4c&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;f219ac09&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5008&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve _ prefix handling in SCSS imports &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/88e447c449608523d87c517396bde31a62f392b6&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;88e447c4&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5008&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5008&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fix file paths for uncached transformed images &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/b718d743b7a2eff3bea74ced57147825294a629f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;b718d743&lt;/a&gt; &lt;a href=&#34;https://github.com/RJacksonm1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@RJacksonm1&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5012&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix image cache eviction for sites with subdir in baseURL &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/786f72302f65580ca8d1df2132a7756584539ea0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;786f7230&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/5006&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#5006&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 0.45.1: Two Bug Fixes</title>
      <link>https://blog.maoxianplay.com/2018/0.45.1-relnotes/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.45.1-relnotes/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;This is a bug-fix release with a couple of important fixes (and one enhancement).
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add Page.FirstSection &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/016dd4a69a765061bb3da8490d3cac6ec47a91eb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;016dd4a6&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fix .Site.GetPage regression &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/04d4c08dbcac08ff7feeb88863e91799fed0937b&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;04d4c08d&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4989&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4989&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix &amp;ldquo;borrow content from another language&amp;rdquo; issue &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c6b599a06d66b8e3c92343d25bb8043eb4f291f1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c6b599a0&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4986&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4986&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 0.45: Revival of ref, relref and GetPage</title>
      <link>https://blog.maoxianplay.com/2018/0.45-relnotes/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.45-relnotes/</guid>
      <description>

&lt;p&gt;Hugo &lt;code&gt;0.45&lt;/code&gt; is the &lt;strong&gt;revival of ref, relref and GetPage&lt;/strong&gt;. &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt; and &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; have done some great work improving the API and implementation for the helper functions used to &lt;strong&gt;get one page&lt;/strong&gt;. Before this release, the API was a little bit clumsy and the result potentially ambiguous in some situations.&lt;/p&gt;

&lt;p&gt;Now you can simply do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{ with .Site.GetPage &amp;quot;/blog/my-post.md&amp;quot; }}{{ .Title }}{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or to get a section page:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{ with .Site.GetPage &amp;quot;/blog&amp;quot; }}{{ .Title }}{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have also added a &lt;code&gt;.GetPage&lt;/code&gt; method on &lt;code&gt;Page&lt;/code&gt; and added support for page-relative linking. This means that the leading slash (&lt;code&gt;/&lt;/code&gt;) now has a meaning. For &lt;code&gt;.Site.GetPage&lt;/code&gt;, all lookups will start at the content root. But for lookups with a &lt;code&gt;Page&lt;/code&gt; context, paths without a leading slash will be treated as relative to the page.&lt;/p&gt;

&lt;p&gt;This means that the following example will find the page in the current section:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{&amp;lt; ref &amp;quot;my-post.md&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also use the &lt;code&gt;..&lt;/code&gt; to refer to a page one level up etc.:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{&amp;lt; ref &amp;quot;../my-post.md&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have now also added language support to &lt;code&gt;ref&lt;/code&gt; and &lt;code&gt;relref&lt;/code&gt;, so you can link to a page in another language:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{&amp;lt; relref path=&amp;quot;document.md&amp;quot; lang=&amp;quot;jp&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To link to a given Output Format of a document, you can use this syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{&amp;lt; relref path=&amp;quot;document.md&amp;quot; outputFormat=&amp;quot;rss&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To make working with these reflinks on bigger sites easier to work with, we have also improved the error logging, and added two new configuration settings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;refLinksErrorLevel: ERROR (default, will fail the build when a reflink cannot be resolved) or WARNING.&lt;/li&gt;
&lt;li&gt;refLinksNotFoundURL: Set this to an URL placeholder used when no reference could be resolved.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Visit the &lt;a href=&#34;https://gohugo.io/content-management/cross-references&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo Docs&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;We have also done some important improvements and fixes in &lt;strong&gt;Hugo Pipes&lt;/strong&gt; in this release: SCSS source maps on Windows now works, we now support project-local &lt;code&gt;PostCSS&lt;/code&gt; installation, and we have added &lt;code&gt;IncludePaths&lt;/code&gt; to &lt;code&gt;SCSS&lt;/code&gt; options, making it possible to include, say, a path below &lt;code&gt;node_modules&lt;/code&gt; in the SASS/SCSS build.&lt;/p&gt;

&lt;p&gt;This release represents &lt;strong&gt;31 contributions by 4 contributors&lt;/strong&gt; to the main Hugo code base.
&lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; leads the Hugo development with a significant amount of contributions, but also a big shoutout to &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt;, &lt;a href=&#34;https://github.com/hairmare&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@hairmare&lt;/a&gt;, and &lt;a href=&#34;https://github.com/garrmcnu&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@garrmcnu&lt;/a&gt; for their ongoing contributions.
And a big thanks to &lt;a href=&#34;https://github.com/digitalcraftsman&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@digitalcraftsman&lt;/a&gt; for his relentless work on keeping the themes site in pristine condition and to &lt;a href=&#34;https://github.com/kaushalmodi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@kaushalmodi&lt;/a&gt; for his great work on the documentation site.&lt;/p&gt;

&lt;p&gt;Many have also been busy writing and fixing the documentation in &lt;a href=&#34;https://github.com/gohugoio/hugoDocs&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugoDocs&lt;/a&gt;,
which has received &lt;strong&gt;10 contributions by 8 contributors&lt;/strong&gt;. A special thanks to &lt;a href=&#34;https://github.com/kaushalmodi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@kaushalmodi&lt;/a&gt;, &lt;a href=&#34;https://github.com/Hanzei&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@Hanzei&lt;/a&gt;, &lt;a href=&#34;https://github.com/KurtTrowbridge&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@KurtTrowbridge&lt;/a&gt;, and &lt;a href=&#34;https://github.com/regisphilibert&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@regisphilibert&lt;/a&gt; for their work on the documentation site.&lt;/p&gt;

&lt;p&gt;Hugo now has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;27334+ &lt;a href=&#34;https://github.com/gohugoio/hugo/stargazers&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;443+ &lt;a href=&#34;https://github.com/gohugoio/hugo/graphs/contributors&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;238+ &lt;a href=&#34;http://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.Site.GetPage&lt;/code&gt; with more than 2 arguments will not work anymore. This means that &lt;code&gt;{{ .Site.GetPage &amp;quot;page&amp;quot; &amp;quot;blog&amp;quot; &amp;quot;my-post.md&amp;quot; }}&lt;/code&gt; will fail. &lt;code&gt;{{ .Site.GetPage &amp;quot;page&amp;quot; &amp;quot;blog/my-post.md&amp;quot; }}&lt;/code&gt; will work, but we recommend you use the simpler &lt;code&gt;{{ .Site.GetPage &amp;quot;/blog/my-post.md&amp;quot; }}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Relative paths in &lt;code&gt;relref&lt;/code&gt; or &lt;code&gt;ref&lt;/code&gt; that finds its match not relative to the page itself will work, but we now print a warning saying that you should correct it to an absolute path. E.g. &lt;code&gt;{{&amp;lt; ref &amp;quot;blog/my-post.md&amp;quot; &amp;gt;}}&lt;/code&gt; =&amp;gt; &lt;code&gt;{{&amp;lt; ref &amp;quot;/blog/my-post.md&amp;quot; &amp;gt;}}&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Print a WARNING about relative non-relative ref/relref matches &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/a451c49fde1da6e2cc436a2b7d383ee772b1f893&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;a451c49f&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4973&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4973&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Allow untyped nil to be merged in lang.Merge &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/ff16c42ed0965e1c8acf6e6a6dcda3ea50c107f2&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ff16c42e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4977&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4977&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get rid of the utils package &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/062510cf1f7b79aed2efe88c5b9340d009bdec0e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;062510cf&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update hugo_windows.go &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/4e1d0cd9f1d43d133d669a019a84117cadd41955&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;4e1d0cd9&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add IncludePaths config option &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/166483fe1227b0c59c6b4d88cfdfaf7d7b0d79c5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;166483fe&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4921&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4921&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Increase refLinker test coverage &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/8278384b9680cfdcecef9c668638ad483012857f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;8278384b&lt;/a&gt; &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add test coverage for recent ref overhaul &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/2bac3715448e90e197ada7cc73c87f696c19def6&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;2bac3715&lt;/a&gt; &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4969&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4969&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update ref, relref, GetPage docs &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/1eb8b36b3802e72bc2c16965461ef1899bb073b3&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;1eb8b36b&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Document refLinksErrorLevel and refLinksNotFoundURL &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/00c74ee7ffae71fd5f47d555160354a775e26151&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;00c74ee7&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4964&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4964&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add configurable ref/relref error handling and notFoundURL &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e25aa655f4227ac064be5fe770d517a80acd46b2&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e25aa655&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4964&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4964&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Try node_modules/postcss-cli/bin/postcss first &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/ebe4d39f175f73e4f130972cb3d74ef0af5d5761&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ebe4d39f&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4952&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4952&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add optional lang as argument to rel/relref &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d741064bebe2f4663a7ba12556dccc3dffe08629&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d741064b&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4956&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4956&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simplify .Site.GetPage etc. &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/3eb313fef495a39731dafa6bddbf77760090230d&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;3eb313fe&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4147&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4147&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4727&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4727&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4728&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4728&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4728&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4728&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4726&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4726&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4652&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4652&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unify page lookups &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/b93417aa1d3d38a9e56bad25937e0e638a113faf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;b93417aa&lt;/a&gt; &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4147&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4147&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4727&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4727&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4728&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4728&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4728&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4728&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4726&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4726&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4652&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4652&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve error message &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/4c240800a4275244c9e0847cd6707383180f1ac3&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;4c240800&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Remove unused code &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/2f2bc7ff70b90fb11580cc092ef3883bf68d8ad7&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;2f2bc7ff&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Avoid server panic on TOML mistake in i18n &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/75acff5f20d0d41ffa1ae20402001c7a82f077cb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;75acff5f&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4942&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4942&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Only set &amp;lsquo;allThemes&amp;rsquo; if there are themes in the config file &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/38204c4ab6fa2aa2ab8bd06ddb3e07b66e5f9646&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;38204c4a&lt;/a&gt; &lt;a href=&#34;https://github.com/garrmcnu&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@garrmcnu&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4851&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4851&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix potential server panic with drafts/future enabled &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/1ab4658c0d5ea2927f04bd748206e5b139a6326e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;1ab4658c&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4965&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4965&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mark shortcode changes as content changes in server mode &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/12679b408362a93a3c6159588d6291a3b7ed5548&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;12679b40&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4965&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4965&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix source maps on Windows &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/f01505c910a325acc18742ac6b3637aa01975e37&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;f01505c9&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4968&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4968&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix typo-logic bug in GetPage &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/b56d9a1294e692d096bff442e0b1fec61a8c2b0f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;b56d9a12&lt;/a&gt; &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enable test case fixed by commit 501543d4 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d6fde8fa131f3852fa98a8ec5c360e736486cf54&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d6fde8fa&lt;/a&gt; &lt;a href=&#34;https://github.com/vassudanagunta&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@vassudanagunta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix theme config for Work Fs &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/5c9d5413a4e2cc8d44a8b2d7dff04e6523ba2a29&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;5c9d5413&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4951&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4951&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix addkit link to account for i18n &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/fd1f4a7860c4b989865b47c727239cf924a52fa4&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;fd1f4a78&lt;/a&gt; &lt;a href=&#34;https://github.com/hairmare&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@hairmare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 0.44: Friday the 13th Edition</title>
      <link>https://blog.maoxianplay.com/2018/0.44-relnotes/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.44-relnotes/</guid>
      <description>

&lt;p&gt;Hugo &lt;code&gt;0.44&lt;/code&gt; is the follow-up release, or &lt;strong&gt;The Sequel&lt;/strong&gt;, of the very well received &lt;code&gt;0.43&lt;/code&gt; only days ago. That release added &lt;strong&gt;Hugo Pipes&lt;/strong&gt;, with SCSS/SASS support, assets bundling and minification, ad-hoc image processing and much more.&lt;/p&gt;

&lt;p&gt;This is mostly a bug-fix release, but it also includes several important improvements.&lt;/p&gt;

&lt;p&gt;Many complained that their SVG images vanished when browsed from the &lt;code&gt;hugo server&lt;/code&gt;. With &lt;strong&gt;Hugo Pipes&lt;/strong&gt; MIME types suddenly got really important, but Hugo&amp;rsquo;s use of &lt;code&gt;Suffix&lt;/code&gt; was ambiguous. This became visible when we redefined the &lt;code&gt;image/svg+xml&lt;/code&gt; to work with &lt;strong&gt;Hugo Pipes&lt;/strong&gt;. We have now added a &lt;code&gt;Suffixes&lt;/code&gt; field on the MIME type definition in Hugo, which is a list of one or more filename suffixes the MIME type is identified with. If you need to add a custom MIME type definition, this means that you also need to specify the full MIME type as the key, e.g. &lt;code&gt;image/svg+xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hugo now has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;27120+ &lt;a href=&#34;https://github.com/gohugoio/hugo/stargazers&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;443+ &lt;a href=&#34;https://github.com/gohugoio/hugo/graphs/contributors&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;239+ &lt;a href=&#34;http://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MediaType.Suffix&lt;/code&gt; is deprecated and replaced with a plural version,  &lt;code&gt;MediaType.Suffixes&lt;/code&gt;, with a more specific definition. You will get a detailed WARNING in the console if you need to do anything.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Allow multiple file suffixes per media type &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/b874a1ba7ab8394dc741c8c70303a30a35b63e43&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;b874a1ba&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4920&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4920&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clean up the in-memory Resource reader usage &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/47d38628ec0f4e72ff17661f13456b2a1511fe13&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;47d38628&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4936&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4936&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Move opening of the transformed resources after cache check &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0024dcfe3e016c67046de06d1dac5e7f5235f9e1&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;0024dcfe&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve type support in &lt;code&gt;resources.Concat&lt;/code&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/306573def0e20ec16ee5c447981cc09ed8bb7ec7&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;306573de&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4934&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4934&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flush &lt;code&gt;partialCached&lt;/code&gt; cache on rebuilds &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/6b6dcb44a014699c289bf32fe57d4c4216777be0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;6b6dcb44&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4931&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4931&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Include the transformation step in the error message &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d96f2a460f58e91d8f6253a489d4879acfec6916&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d96f2a46&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4924&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4924&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exclude *.svg from CRLF/LF conversion &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/9c1e82085eb07d5b4dcdacbe82d5bafd26e08631&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;9c1e8208&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fix &lt;code&gt;resources.Concat&lt;/code&gt; for transformed resources &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/beec1fc98e5d37bba742d6bc2a0ff7c344b469f8&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;beec1fc9&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4936&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4936&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix static filesystem for themed multihost sites &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/80c8f3b81a9849080e64bf877288ede28d960d3f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;80c8f3b8&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4929&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4929&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set permission of embedded templates to 0644 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/2b73e89d6d2822e86360a6c92c87f539677c119b&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;2b73e89d&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>And Now: Hugo Pipes!</title>
      <link>https://blog.maoxianplay.com/2018/0.43-relnotes/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2018/0.43-relnotes/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;Hugo `0.43` adds a powerful and very simple to use **Assets Pipeline** with **SASS and SCSS** with source map support, **PostCSS** and **minification** and **fingerprinting** and **Subresource Integrity** and ... much more. Oh, did we mention that you can now do **ad-hoc image processing** and execute text resources as Go templates?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example pipeline:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go-html-template&#34;&gt;{{ $styles := resources.Get &amp;quot;scss/main.scss&amp;quot; | toCSS | postCSS | minify | fingerprint }}
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ $styles.Permalink }}&amp;quot; integrity=&amp;quot;{{ $styles.Data.Integrity }}&amp;quot; media=&amp;quot;screen&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To me, the above is beautiful in its speed and simplicity. It could be printed on a t-shirt. I wrote in the &lt;a href=&#34;https://gohugo.io/news/lets-celebrate-hugos-5th-birthday/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hugo Birthday Post&lt;/a&gt; some days ago about the value of a single binary with native and fast implementations. I should have added &lt;em&gt;simplicity&lt;/em&gt; as a keyword. There seem to be a misconception that all of this needs to be hard and painful.&lt;/p&gt;

&lt;p&gt;New functions to create &lt;code&gt;Resource&lt;/code&gt; objects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;resources.Get&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources.FromString&lt;/code&gt;: Create a Resource from a string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;New &lt;code&gt;Resource&lt;/code&gt; transformation funcs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;resources.ToCSS&lt;/code&gt;: Compile &lt;code&gt;SCSS&lt;/code&gt; or &lt;code&gt;SASS&lt;/code&gt; into &lt;code&gt;CSS&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources.PostCSS&lt;/code&gt;: Process your CSS with PostCSS. Config file support (project or theme or passed as an option).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources.Minify&lt;/code&gt;: Currently supports &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources.Fingerprint&lt;/code&gt;: Creates a fingerprinted version of the given Resource with Subresource Integrity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources.Concat&lt;/code&gt;: Concatenates a list of Resource objects. Think of this as a poor man&amp;rsquo;s bundler.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources.ExecuteAsTemplate&lt;/code&gt;: Parses and executes the given Resource and data context (e.g. .Site) as a Go template.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I, &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;, implemented this in &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/dea71670c059ab4d5a42bd22503f18c087dd22d4&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;dea71670&lt;/a&gt;. We will work hard to get the documentation up to date, but follow the links above for details, and also see this &lt;a href=&#34;https://github.com/bep/hugo-sass-test&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;demo project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This release represents &lt;strong&gt;35 contributions by 7 contributors&lt;/strong&gt; to the main Hugo code base.
&lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; leads the Hugo development with a significant amount of contributions, but also a big shoutout to &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;, &lt;a href=&#34;https://github.com/openscript&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@openscript&lt;/a&gt;, and &lt;a href=&#34;https://github.com/caarlos0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@caarlos0&lt;/a&gt; for their ongoing contributions.
And a big thanks to &lt;a href=&#34;https://github.com/digitalcraftsman&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@digitalcraftsman&lt;/a&gt; for his relentless work on keeping the themes site in pristine condition and to &lt;a href=&#34;https://github.com/kaushalmodi&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@kaushalmodi&lt;/a&gt; for his great work on the documentation site.&lt;/p&gt;

&lt;p&gt;Many have also been busy writing and fixing the documentation in &lt;a href=&#34;https://github.com/gohugoio/hugoDocs&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugoDocs&lt;/a&gt;,
which has received &lt;strong&gt;11 contributions by 5 contributors&lt;/strong&gt;. A special thanks to &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;, &lt;a href=&#34;https://github.com/danrl&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@danrl&lt;/a&gt;, &lt;a href=&#34;https://github.com/regisphilibert&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@regisphilibert&lt;/a&gt;, and &lt;a href=&#34;https://github.com/digitalcraftsman&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@digitalcraftsman&lt;/a&gt; for their work on the documentation site.&lt;/p&gt;

&lt;p&gt;Hugo now has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;26968+ &lt;a href=&#34;https://github.com/gohugoio/hugo/stargazers&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;stars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;443+ &lt;a href=&#34;https://github.com/gohugoio/hugo/graphs/contributors&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;238+ &lt;a href=&#34;http://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Replace deprecated {Get,}ByPrefix with {Get,}Match &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/42ed602580a672e420e1d860384e812f4871ff67&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;42ed6025&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hugo is now released with two binary version: One with and one without SCSS/SASS support. At the time of writing, this is only available in the binaries on the GitHub release page. Brew, Snap builds etc. will come. But note that you &lt;strong&gt;only need the extended version if you want to edit SCSS&lt;/strong&gt;. For your CI server, or if you don&amp;rsquo;t use SCSS, you will most likely want the non-extended version.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;

&lt;h3 id=&#34;templates&#34;&gt;Templates&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Return en empty slice in &lt;code&gt;after&lt;/code&gt; instead of error &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/f8212d20009c4b5cc6e1ec733d09531eb6525d9f&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;f8212d20&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4894&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4894&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update internal pagination template to support Bootstrap 4 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/ca1e46efb94e3f3d2c8482cb9434d2f38ffd2683&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ca1e46ef&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4881&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4881&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support text/template/parse API change in go1.11 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/9f27091e1067875e2577c331acc60adaef5bb234&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;9f27091e&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4784&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4784&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;core&#34;&gt;Core&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Allow forward slash in shortcode names &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/de37455ec73cffd039b44e8f6c62d2884b1d6bbd&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;de37455e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4886&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4886&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reset the global pages cache on server rebuilds &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/128f14efad90886ffef37c01ac1e20436a732f97&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;128f14ef&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4845&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4845&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;other&#34;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Bump CircleCI image &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e3df6478f09a7a5fed96aced791fa94fd2c35d1a&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e3df6478&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add Goreleaser extended config &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/626afc98254421f5a5edc97c541b10bd81d5bbbb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;626afc98&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4908&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4908&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Build both hugo and hugo.extended for 0.43 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e1027c5846b48c4ad450f6cc27e2654c9e0dae39&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e1027c58&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4908&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4908&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add temporary build script &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/bfc3488b8e8b3dc1ffc6a339ee2dac8dcbdb55a9&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;bfc3488b&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add &amp;ldquo;extended&amp;rdquo; to &amp;ldquo;hugo version&amp;rdquo; &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/ce84b524f4e94299b5b66afe7ce1a9bd4a9959fc&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ce84b524&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4913&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4913&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add a newScratch template func &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/2b8d907ab731627f4e2a30442cd729064516c8bb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;2b8d907a&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4685&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4685&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add Hugo Piper with SCSS support and much more &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/dea71670c059ab4d5a42bd22503f18c087dd22d4&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;dea71670&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4381&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4381&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4903&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4903&lt;/a&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4858&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4858&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Consider root and current section&amp;rsquo;s content type if set in front matter &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/c790029e1dbb0b66af18d05764bd6045deb2e180&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;c790029e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4891&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4891&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update docker image &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/554553c09c7657d28681e1fa0638806a452737a0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;554553c0&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Merge branch &amp;lsquo;release-0.42.2&amp;rsquo; &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/282f6035e7c36f8550d91033e3a66718468c6c8b&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;282f6035&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Release 0.42.2 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/1637d12e3762fc1ebab4cd675f75afaf25f59cdb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;1637d12e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update GoReleaser config &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/1f0c4e1fb347bb233f3312c424fbf5a013c03604&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;1f0c4e1f&lt;/a&gt; &lt;a href=&#34;https://github.com/caarlos0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@caarlos0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create missing head.html partial on new theme generation &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/fd71fa89bd6c197402582c87b2b76d4b96d562bf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;fd71fa89&lt;/a&gt; &lt;a href=&#34;https://github.com/openscript&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@openscript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add html doctype to baseof.html template for new themes &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/b5a3aa7082135d0a573f4fbb00f798e26b67b902&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;b5a3aa70&lt;/a&gt; &lt;a href=&#34;https://github.com/openscript&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@openscript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adds .gitattributes to force Go files to LF &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/6a2968fd5c0116d93de0f379ac615e9076821899&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;6a2968fd&lt;/a&gt; &lt;a href=&#34;https://github.com/neurocline&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@neurocline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update to Go 1.9.7 and Go 1.10.3 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/23d5fc82ee01d56440d0991c899acd31e9b63e27&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;23d5fc82&lt;/a&gt; &lt;a href=&#34;https://github.com/anthonyfok&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@anthonyfok&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Update Dockerfile to a multi-stage build &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/8531ec7ca36fd35a57fba06bbb06a65c94dfd3ed&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;8531ec7c&lt;/a&gt; &lt;a href=&#34;https://github.com/skoblenick&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@skoblenick&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4154&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4154&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Release 0.42.1 &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/d67e843c1212e1f53933556b5f946c8541188d9a&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;d67e843c&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do not fail server build when /static is missing &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/34ee27a78b9e2b5f475d44253ae234067b76cc6e&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;34ee27a7&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4846&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4846&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Do not create paginator pages for the other output formats &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/43338c3a99769eb7d0df0c12559b8b3d42b67dba&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;43338c3a&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4890&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4890&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix the shortcodes/partials vs base template detection &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/a5d0a57e6bdab583134a68c035aac9b3007f006a&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;a5d0a57e&lt;/a&gt; &lt;a href=&#34;https://github.com/bep&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@bep&lt;/a&gt; &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/4897&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;#4897&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nfpm replacements &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/e1a052ecb823c688406a8af97dfaaf52a75231da&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;e1a052ec&lt;/a&gt; &lt;a href=&#34;https://github.com/caarlos0&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@caarlos0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fix typos &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/3cea2932e17a08ebc19cd05f3079d9379bc8fba5&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;3cea2932&lt;/a&gt; &lt;a href=&#34;https://github.com/idealhack&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;@idealhack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HTTP/2 Server Push in Hugo</title>
      <link>https://blog.maoxianplay.com/2017/http2-server-push-in-hugo/</link>
      <pubDate>Mon, 24 Jul 2017 18:36:00 +0200</pubDate>
      
      <guid>https://blog.maoxianplay.com/2017/http2-server-push-in-hugo/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Netlify&lt;/strong&gt; recently announced support for &lt;a href=&#34;https://www.netlify.com/blog/2017/07/18/http/2-server-push-on-netlify/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;HTTP/2 server push&lt;/a&gt;, and we have now added it to the &lt;strong&gt;gohugo.io&lt;/strong&gt; sites for the main &lt;code&gt;CSS&lt;/code&gt; and &lt;code&gt;JS&lt;/code&gt; bundles, along with server-side 301 redirect support.&lt;/p&gt;

&lt;p&gt;If you navigate to &lt;a href=&#34;https://gohugo.io&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://gohugo.io&lt;/a&gt; and look in the Chrome developer network console, you should now see &lt;code&gt;Push&lt;/code&gt; as the new source (&amp;ldquo;Initiator&amp;rdquo;) for the &lt;code&gt;CSS&lt;/code&gt; and &lt;code&gt;JSS&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up this in Hugo was easy:&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-configure-netlify-output-formats&#34;&gt;1. Configure Netlify Output Formats&lt;/h2&gt;

&lt;p&gt;Add a new custom media type and two new output formats to &lt;code&gt;config.toml&lt;/code&gt;. For more on output formats in Hugo, see &lt;a href=&#34;https://blog.maoxianplay.com/templates/output-formats/&#34;&gt;Custom Output Formats&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[outputs]
home = [ &amp;quot;HTML&amp;quot;, &amp;quot;RSS&amp;quot;, &amp;quot;REDIR&amp;quot;, &amp;quot;HEADERS&amp;quot; ]

[mediaTypes]
[mediaTypes.&amp;quot;text/netlify&amp;quot;]
suffix = &amp;quot;&amp;quot;
delimiter = &amp;quot;&amp;quot;

[outputFormats]
[outputFormats.REDIR]
mediatype = &amp;quot;text/netlify&amp;quot;
baseName = &amp;quot;_redirects&amp;quot;
isPlainText = true
notAlternative = true
[outputFormats.HEADERS]
mediatype = &amp;quot;text/netlify&amp;quot;
baseName = &amp;quot;_headers&amp;quot;
isPlainText = true
notAlternative = true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-add-template-for-the-headers-file&#34;&gt;2. Add Template For the _headers File&lt;/h2&gt;

&lt;p&gt;Add &lt;code&gt;layouts/index.headers&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/*
  X-Frame-Options: DENY
  X-XSS-Protection: 1; mode=block
  X-Content-Type-Options: nosniff
  Referrer-Policy: origin-when-cross-origin
*/
  Link: &amp;lt;{{ &amp;quot;dist/app.bundle.js&amp;quot; | relURL }}&amp;gt;; rel=preload; as=script
  Link: &amp;lt;{{ &amp;quot;dist/main.css&amp;quot; | relURL }}&amp;gt;; rel=preload; as=style
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The template above creates both a security header definition and a HTTP/2 server push configuration.&lt;/p&gt;

&lt;p&gt;Also note that this is a template for the home page, so the full &lt;code&gt;Page&lt;/code&gt; with its &lt;code&gt;Site&lt;/code&gt; and many variables are available. You can also use &lt;code&gt;partial&lt;/code&gt; to include other templates.&lt;/p&gt;

&lt;h2 id=&#34;3-add-template-for-the-redirects-file&#34;&gt;3. Add Template For the _redirects File&lt;/h2&gt;

&lt;p&gt;Add &lt;code&gt;layouts/index.redir&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Netlify redirects. See https://www.netlify.com/docs/redirects/
{{  range $p := .Site.Pages -}}
{{ range .Aliases }}
{{  . | printf &amp;quot;%-35s&amp;quot; }}	{{ $p.RelPermalink -}}
{{ end -}}
{{- end -}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The template above creates 301 redirects for your &lt;a href=&#34;https://blog.maoxianplay.com/content-management/urls/#aliases&#34;&gt;aliases&lt;/a&gt;, so you will probably want to turn off aliases in your &lt;code&gt;config.toml&lt;/code&gt;: &lt;code&gt;disableAliases = true&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://blog.maoxianplay.com/2014/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2014/creating-a-new-theme/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll start with creating a new site with a very basic template. Then we&amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&lt;/p&gt;

&lt;p&gt;In this tutorial, commands that you enter will start with the &amp;ldquo;$&amp;rdquo; prompt. The output will follow. Lines that start with &amp;ldquo;#&amp;rdquo; are comments that I&amp;rsquo;ve added to explain a point. When I show updates to a file, the &amp;ldquo;:wq&amp;rdquo; on the last line means to save the file.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## this is a comment
$ echo this is a command
this is a command

## edit the file
$vi foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
:wq

## show it
$ cat foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;some-definitions&#34;&gt;Some Definitions&lt;/h2&gt;

&lt;p&gt;There are a few concepts that you need to understand before creating a theme.&lt;/p&gt;

&lt;h3 id=&#34;skins&#34;&gt;Skins&lt;/h3&gt;

&lt;p&gt;Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.&lt;/p&gt;

&lt;p&gt;You have two ways to create a skin. The simplest way is to create it in the &lt;code&gt;layouts/&lt;/code&gt; directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the &lt;code&gt;layouts/&lt;/code&gt; directory so it will always find the skin.&lt;/p&gt;

&lt;p&gt;Your second choice is to create it in a sub-directory of the &lt;code&gt;themes/&lt;/code&gt; directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?&lt;/p&gt;

&lt;p&gt;The difference between creating a skin in &lt;code&gt;layouts/&lt;/code&gt; and creating it in &lt;code&gt;themes/&lt;/code&gt; is very subtle. A skin in &lt;code&gt;layouts/&lt;/code&gt; can’t be customized without updating the templates and static files that it is built from. A skin created in &lt;code&gt;themes/&lt;/code&gt;, on the other hand, can be and that makes it easier for other people to use it.&lt;/p&gt;

&lt;p&gt;The rest of this tutorial will call a skin created in the &lt;code&gt;themes/&lt;/code&gt; directory a theme.&lt;/p&gt;

&lt;p&gt;Note that you can use this tutorial to create a skin in the &lt;code&gt;layouts/&lt;/code&gt; directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.&lt;/p&gt;

&lt;h3 id=&#34;the-home-page&#34;&gt;The Home Page&lt;/h3&gt;

&lt;p&gt;The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.&lt;/p&gt;

&lt;h3 id=&#34;site-configuration-file&#34;&gt;Site Configuration File&lt;/h3&gt;

&lt;p&gt;When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.&lt;/p&gt;

&lt;p&gt;Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your &lt;code&gt;content/&lt;/code&gt; directory and template files in your &lt;code&gt;themes/&lt;/code&gt; directory. It will create HTML files in your &lt;code&gt;public/&lt;/code&gt; directory. You can change this by specifying alternate locations in the configuration file.&lt;/p&gt;

&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;

&lt;p&gt;Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.&lt;/p&gt;

&lt;h4 id=&#34;front-matter&#34;&gt;Front Matter&lt;/h4&gt;

&lt;p&gt;The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “&lt;code&gt;+++&lt;/code&gt;”, YAML by “&lt;code&gt;---&lt;/code&gt;”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.&lt;/p&gt;

&lt;p&gt;The information in the front matter is passed into the template before the content is rendered into HTML.&lt;/p&gt;

&lt;h4 id=&#34;markdown&#34;&gt;Markdown&lt;/h4&gt;

&lt;p&gt;Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.&lt;/p&gt;

&lt;h3 id=&#34;template-files&#34;&gt;Template Files&lt;/h3&gt;

&lt;p&gt;Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it&amp;rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.&lt;/p&gt;

&lt;p&gt;There are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.&lt;/p&gt;

&lt;p&gt;Hugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.&lt;/p&gt;

&lt;p&gt;Please note that you can use the front matter to influence Hugo’s choice of templates.&lt;/p&gt;

&lt;h4 id=&#34;single-template&#34;&gt;Single Template&lt;/h4&gt;

&lt;p&gt;A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.&lt;/p&gt;

&lt;h4 id=&#34;list-template&#34;&gt;List Template&lt;/h4&gt;

&lt;p&gt;A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.&lt;/p&gt;

&lt;p&gt;The homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.&lt;/p&gt;

&lt;h4 id=&#34;partial-template&#34;&gt;Partial Template&lt;/h4&gt;

&lt;p&gt;A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-site&#34;&gt;Create a New Site&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s use Hugo to create a new web site. I&amp;rsquo;m a Mac user, so I&amp;rsquo;ll create mine in my home directory, in the Sites folder. If you&amp;rsquo;re using Linux, you might have to create the folder first.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;new site&amp;rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site ~/Sites/zafta
$ cd ~/Sites/zafta
$ ls -l
total 8
drwxr-xr-x  7 quoha  staff  238 Sep 29 16:49 .
drwxr-xr-x  3 quoha  staff  102 Sep 29 16:49 ..
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a look in the content/ directory to confirm that it is empty.&lt;/p&gt;

&lt;p&gt;The other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That&amp;rsquo;s a topic for a different tutorial, so please ignore them for now.&lt;/p&gt;

&lt;h3 id=&#34;generate-the-html-for-the-new-site&#34;&gt;Generate the HTML For the New Site&lt;/h3&gt;

&lt;p&gt;Running the &lt;code&gt;hugo&lt;/code&gt; command with no options will read all the available content and generate the HTML files. It will also copy all static files (that&amp;rsquo;s everything that&amp;rsquo;s not content). Since we have an empty site, it won&amp;rsquo;t do much, but it will do it very quickly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &amp;ldquo;&lt;code&gt;--verbose&lt;/code&gt;&amp;rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with &amp;ldquo;INFO:&amp;rdquo; or &amp;ldquo;WARN:&amp;rdquo; is present because we used that flag. The lines that start with &amp;ldquo;WARN:&amp;rdquo; are warning messages. We&amp;rsquo;ll go over them later.&lt;/p&gt;

&lt;p&gt;We can verify that the command worked by looking at the directory again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See that new public/ directory? Hugo placed all generated content there. When you&amp;rsquo;re ready to publish your web site, that&amp;rsquo;s the place to start. For now, though, let&amp;rsquo;s just confirm that we have what we&amp;rsquo;d expect from a site with no content.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
-rw-r--r--  1 quoha  staff  416 Sep 29 17:02 index.xml
-rw-r--r--  1 quoha  staff  262 Sep 29 17:02 sitemap.xml
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hugo created two XML files, which is standard, but there are no HTML files.&lt;/p&gt;

&lt;h3 id=&#34;test-the-new-site&#34;&gt;Test the New Site&lt;/h3&gt;

&lt;p&gt;Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the &amp;ldquo;server&amp;rdquo; command. If it is successful, you will see output similar to the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Connect to the listed URL (it&amp;rsquo;s on the line that starts with &amp;ldquo;Web Server&amp;rdquo;). If everything is working correctly, you should get a page that shows the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;index.xml
sitemap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s a listing of your public/ directory. Hugo didn&amp;rsquo;t create a home page because our site has no content. When there&amp;rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.&lt;/p&gt;

&lt;p&gt;Let’s go back and look at those warnings again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.&lt;/p&gt;

&lt;p&gt;Now for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.&lt;/p&gt;

&lt;p&gt;I like that the verbose flag causes Hugo to list the files that it&amp;rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we&amp;rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn&amp;rsquo;t find a template for the home page and it told you so.&lt;/p&gt;

&lt;p&gt;At this point, you&amp;rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-theme&#34;&gt;Create a New Theme&lt;/h2&gt;

&lt;p&gt;Hugo doesn&amp;rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re going to create a new theme called &amp;ldquo;zafta.&amp;rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.&lt;/p&gt;

&lt;p&gt;All themes have opinions on content and layout. For example, Zafta uses &amp;ldquo;post&amp;rdquo; over &amp;ldquo;blog&amp;rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.&lt;/p&gt;

&lt;h3 id=&#34;create-a-skeleton&#34;&gt;Create a Skeleton&lt;/h3&gt;

&lt;p&gt;Use the hugo &amp;ldquo;new&amp;rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new theme zafta

$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes

$ find themes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff  1081 Sep 29 17:31 themes/zafta/LICENSE.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
-rw-r--r--  1 quoha  staff    93 Sep 29 17:31 themes/zafta/theme.toml
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.&lt;/p&gt;

&lt;p&gt;Please take a minute to fill out the theme.toml and LICENSE.md files. They&amp;rsquo;re optional, but if you&amp;rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It&amp;rsquo;s also nice to declare the license so that people will know how they can use the theme.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/theme.toml
author = &amp;quot;michael d henderson&amp;quot;
description = &amp;quot;a minimal working template&amp;quot;
license = &amp;quot;MIT&amp;quot;
name = &amp;quot;zafta&amp;quot;
source_repo = &amp;quot;&amp;quot;
tags = [&amp;quot;tags&amp;quot;, &amp;quot;categories&amp;quot;]
:wq

## also edit themes/zafta/LICENSE.md and change
## the bit that says &amp;quot;YOUR_NAME_HERE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the the skeleton&amp;rsquo;s template files are empty. Don&amp;rsquo;t worry, we&amp;rsquo;ll be changing that shortly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-the-configuration-file-to-use-the-theme&#34;&gt;Update the Configuration File to Use the Theme&lt;/h3&gt;

&lt;p&gt;Now that we&amp;rsquo;ve got a theme to work with, it&amp;rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add &amp;ldquo;-t zafta&amp;rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don&amp;rsquo;t put it in the configuration file or specify it on the command line, you won&amp;rsquo;t use the template that you&amp;rsquo;re expecting to.&lt;/p&gt;

&lt;p&gt;Edit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi config.toml
theme = &amp;quot;zafta&amp;quot;
baseurl = &amp;quot;&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;zafta - totally refreshing&amp;quot;
MetaDataFormat = &amp;quot;toml&amp;quot;
:wq

$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;generate-the-site&#34;&gt;Generate the Site&lt;/h3&gt;

&lt;p&gt;Now that we have an empty theme, let&amp;rsquo;s generate the site again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme&amp;rsquo;s directory.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check the public/ directory to see what Hugo&amp;rsquo;s created.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 css
-rw-r--r--  1 quoha  staff    0 Sep 29 17:56 index.html
-rw-r--r--  1 quoha  staff  407 Sep 29 17:56 index.xml
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 js
-rw-r--r--  1 quoha  staff  243 Sep 29 17:56 sitemap.xml
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice four things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hugo created a home page. This is the file public/index.html.&lt;/li&gt;
&lt;li&gt;Hugo created a css/ directory.&lt;/li&gt;
&lt;li&gt;Hugo created a js/ directory.&lt;/li&gt;
&lt;li&gt;Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn&amp;rsquo;t create any pages. That&amp;rsquo;s because it considers a &amp;ldquo;page&amp;rdquo; to be a file created directly from a content file. It doesn&amp;rsquo;t count things like the index.html files that it creates automatically.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;the-home-page-1&#34;&gt;The Home Page&lt;/h4&gt;

&lt;p&gt;Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo&amp;rsquo;s warning message shows that it looks for three different templates:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If it can&amp;rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.&lt;/p&gt;

&lt;p&gt;When Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find . -name index.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 20:21 ./public/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 ./themes/zafta/layouts/index.html
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;the-magic-of-static&#34;&gt;The Magic of Static&lt;/h4&gt;

&lt;p&gt;Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.&lt;/p&gt;

&lt;p&gt;Hugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo&amp;rsquo;s opinion is that you&amp;rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don&amp;rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo&amp;rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find themes/zafta -type d | xargs ls -ld
drwxr-xr-x  7 quoha  staff  238 Sep 29 17:38 themes/zafta
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes/zafta/archetypes
drwxr-xr-x  5 quoha  staff  170 Sep 29 17:31 themes/zafta/layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/_default
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/partials
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/static
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/css
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/js
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;the-theme-development-cycle&#34;&gt;The Theme Development Cycle&lt;/h2&gt;

&lt;p&gt;When you&amp;rsquo;re working on a theme, you will make changes in the theme&amp;rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Purge the public/ directory.&lt;/li&gt;
&lt;li&gt;Run the built in web server in watch mode.&lt;/li&gt;
&lt;li&gt;Open your site in a browser.&lt;/li&gt;
&lt;li&gt;Update the theme.&lt;/li&gt;
&lt;li&gt;Glance at your browser window to see changes.&lt;/li&gt;
&lt;li&gt;Return to step 4.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.&lt;/p&gt;

&lt;p&gt;Check the main Hugo site for information on using Git with Hugo.&lt;/p&gt;

&lt;h3 id=&#34;purge-the-public-directory&#34;&gt;Purge the public/ Directory&lt;/h3&gt;

&lt;p&gt;When generating the site, Hugo will create new files and update existing ones in the &lt;code&gt;public/&lt;/code&gt; directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.&lt;/p&gt;

&lt;p&gt;Note: If you&amp;rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.&lt;/p&gt;

&lt;h3 id=&#34;hugo-s-watch-option&#34;&gt;Hugo&amp;rsquo;s Watch Option&lt;/h3&gt;

&lt;p&gt;Hugo&amp;rsquo;s &amp;ldquo;&lt;code&gt;--watch&lt;/code&gt;&amp;rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.&lt;/p&gt;

&lt;h3 id=&#34;live-reload&#34;&gt;Live Reload&lt;/h3&gt;

&lt;p&gt;Hugo&amp;rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, &amp;ldquo;Wow, that&amp;rsquo;s totally amazing.&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;development-commands&#34;&gt;Development Commands&lt;/h3&gt;

&lt;p&gt;Use the following commands as the basis for your workflow.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## purge old files. hugo will recreate the public directory.
##
$ rm -rf public
##
## run hugo in watch mode
##
$ hugo server --watch --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here&amp;rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I&amp;rsquo;ve said this before, it&amp;rsquo;s amazing.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo server --watch --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Watching for changes in /Users/quoha/Sites/zafta/content
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
INFO: 2014/09/29 File System Event: [&amp;quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html&amp;quot;: MODIFY|ATTRIB]
Change detected, rebuilding site

WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 1 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;update-the-home-page-template&#34;&gt;Update the Home Page Template&lt;/h2&gt;

&lt;p&gt;The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme&amp;rsquo;s layout/ directory:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;index.html&lt;/li&gt;
&lt;li&gt;_default/list.html&lt;/li&gt;
&lt;li&gt;_default/single.html&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We could update one of the default templates, but a good design decision is to update the most specific template available. That&amp;rsquo;s not a hard and fast rule (in fact, we&amp;rsquo;ll break it a few times in this tutorial), but it is a good generalization.&lt;/p&gt;

&lt;h3 id=&#34;make-a-static-home-page&#34;&gt;Make a Static Home Page&lt;/h3&gt;

&lt;p&gt;Right now, that page is empty because we don&amp;rsquo;t have any content and we don&amp;rsquo;t have any logic in the template. Let&amp;rsquo;s change that by adding some text to the template.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
&amp;lt;!DOCTYPE html&amp;gt; 
&amp;lt;html&amp;gt; 
&amp;lt;body&amp;gt; 
  &amp;lt;p&amp;gt;hugo says hello!&amp;lt;/p&amp;gt; 
&amp;lt;/body&amp;gt; 
&amp;lt;/html&amp;gt; 
:wq

$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build the web site and then verify the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms

$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 21:26 public/index.html

$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt; 
&amp;lt;html&amp;gt; 
&amp;lt;body&amp;gt; 
  &amp;lt;p&amp;gt;hugo says hello!&amp;lt;/p&amp;gt; 
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;live-reload-1&#34;&gt;Live Reload&lt;/h4&gt;

&lt;p&gt;Note: If you&amp;rsquo;re running the server with the &lt;code&gt;--watch&lt;/code&gt; option, you&amp;rsquo;ll see different content in the file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt; 
&amp;lt;html&amp;gt; 
&amp;lt;body&amp;gt; 
  &amp;lt;p&amp;gt;hugo says hello!&amp;lt;/p&amp;gt; 
&amp;lt;script&amp;gt;document.write(&#39;&amp;lt;script src=&amp;quot;http://&#39; 
        + (location.host || &#39;localhost&#39;).split(&#39;:&#39;)[0] 
    + &#39;:1313/livereload.js?mindelay=10&amp;quot;&amp;gt;&amp;lt;/&#39; 
        + &#39;script&amp;gt;&#39;)&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt; 
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you use &lt;code&gt;--watch&lt;/code&gt;, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.&lt;/p&gt;

&lt;h3 id=&#34;build-a-dynamic-home-page&#34;&gt;Build a &amp;ldquo;Dynamic&amp;rdquo; Home Page&lt;/h3&gt;

&lt;p&gt;&amp;ldquo;Dynamic home page?&amp;rdquo; Hugo&amp;rsquo;s a static web site generator, so this seems an odd thing to say. I mean let&amp;rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We&amp;rsquo;ll use iteration in the template to do that.&lt;/p&gt;

&lt;h4 id=&#34;create-new-posts&#34;&gt;Create New Posts&lt;/h4&gt;

&lt;p&gt;Now that we have the home page generating static content, let&amp;rsquo;s add some content to the site. We&amp;rsquo;ll display these posts as a list on the home page and on their own page, too.&lt;/p&gt;

&lt;p&gt;Hugo has a command to generate a skeleton post, just like it does for sites and themes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md
ERROR: 2014/09/29 Unable to Cast &amp;lt;nil&amp;gt; to map[string]interface{}

$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That wasn&amp;rsquo;t very nice, was it?&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;new&amp;rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there&amp;rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/archetypes/post.md
+++
Description = &amp;quot;&amp;quot;
Tags = []
Categories = []
+++
:wq

$ find themes/zafta/archetypes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff   0 Sep 29 21:53 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff  51 Sep 29 21:54 themes/zafta/archetypes/post.md

$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md
/Users/quoha/Sites/zafta/content/post/first.md created

$ hugo --verbose new post/second.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/second.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md
/Users/quoha/Sites/zafta/content/post/second.md created

$ ls -l content/post
total 16
-rw-r--r--  1 quoha  staff  104 Sep 29 21:54 first.md
-rw-r--r--  1 quoha  staff  105 Sep 29 21:57 second.md

$ cat content/post/first.md 
+++
Categories = []
Description = &amp;quot;&amp;quot;
Tags = []
date = &amp;quot;2014-09-29T21:54:53-05:00&amp;quot;
title = &amp;quot;first&amp;quot;

+++
my first post

$ cat content/post/second.md 
+++
Categories = []
Description = &amp;quot;&amp;quot;
Tags = []
date = &amp;quot;2014-09-29T21:57:09-05:00&amp;quot;
title = &amp;quot;second&amp;quot;

+++
my second post

$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build the web site and then verify the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;, &amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output says that it created 2 pages. Those are our new posts:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 22:13 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/second/index.html
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The new files are empty because because the templates used to generate the content are empty. The homepage doesn&amp;rsquo;t show the new content, either. We have to update the templates to add the posts.&lt;/p&gt;

&lt;h3 id=&#34;list-and-single-templates&#34;&gt;List and Single Templates&lt;/h3&gt;

&lt;p&gt;In Hugo, we have three major kinds of templates. There&amp;rsquo;s the home page template that we updated previously. It is used only by the home page. We also have &amp;ldquo;single&amp;rdquo; templates which are used to generate output for a single content file. We also have &amp;ldquo;list&amp;rdquo; templates that are used to group multiple pieces of content before generating output.&lt;/p&gt;

&lt;p&gt;Generally speaking, list templates are named &amp;ldquo;list.html&amp;rdquo; and single templates are named &amp;ldquo;single.html.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;There are three other types of templates: partials, content views, and terms. We will not go into much detail on these.&lt;/p&gt;

&lt;h3 id=&#34;add-content-to-the-homepage&#34;&gt;Add Content to the Homepage&lt;/h3&gt;

&lt;p&gt;The home page will contain a list of posts. Let&amp;rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  {{ range first 10 .Data.Pages }}
    &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ end }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq

$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between &amp;ldquo;{{&amp;rdquo; and &amp;ldquo;}}&amp;rdquo;. In our template, the commands are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;.Title&lt;/li&gt;
&lt;li&gt;end&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &amp;ldquo;range&amp;rdquo; command is an iterator. We&amp;rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;.Title&amp;rdquo; command prints the value of the &amp;ldquo;title&amp;rdquo; variable. Hugo pulls it from the front matter in the Markdown file.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;end&amp;rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds &amp;ldquo;end.&amp;rdquo; Everything between the &amp;ldquo;range&amp;rdquo; and &amp;ldquo;end&amp;rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.&lt;/p&gt;

&lt;p&gt;Build the web site and then verify the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;, &amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms
$ find public -type f -name &#39;*.html&#39; | xargs ls -l 
-rw-r--r--  1 quoha  staff  94 Sep 29 22:23 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/second/index.html
$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  
    &amp;lt;h1&amp;gt;second&amp;lt;/h1&amp;gt;
  
    &amp;lt;h1&amp;gt;first&amp;lt;/h1&amp;gt;
  
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let&amp;rsquo;s take a moment to appreciate what we&amp;rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you&amp;rsquo;ve learned everything you need to know to build a theme. All that&amp;rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.&lt;/p&gt;

&lt;p&gt;And, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don&amp;rsquo;t worry, though, that&amp;rsquo;s all to come.&lt;/p&gt;

&lt;h3 id=&#34;add-content-to-the-posts&#34;&gt;Add Content to the Posts&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;re working with posts, which are in the content/post/ directory. That means that their section is &amp;ldquo;post&amp;rdquo; (and if we don&amp;rsquo;t do something weird, their type is also &amp;ldquo;post&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;Hugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can&amp;rsquo;t find one, then it will look in the _default/ directory. There are some twists that we&amp;rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.&lt;/p&gt;

&lt;p&gt;Now that we know the search rule, let&amp;rsquo;s see what we actually have available:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name single.html | xargs ls -l
-rw-r--r--  1 quoha  staff  132 Sep 29 17:31 themes/zafta/layouts/_default/single.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We could create a new template, post/single.html, or change the default. Since we don&amp;rsquo;t know of any other content types, let&amp;rsquo;s start with updating the default.&lt;/p&gt;

&lt;p&gt;Remember, any content that we haven&amp;rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we&amp;rsquo;re going to be adding different types of content and we&amp;rsquo;re going to end up undoing some of the changes we&amp;rsquo;ve made. It&amp;rsquo;s good because we&amp;rsquo;ll be able to see immediate results. It&amp;rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we&amp;rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we&amp;rsquo;ll accept the cost and proceed.&lt;/p&gt;

&lt;p&gt;Please see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you&amp;rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That&amp;rsquo;s a refreshing amount of joy right there.&lt;/p&gt;

&lt;h4 id=&#34;update-the-template-file&#34;&gt;Update the Template File&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/_default/single.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ .Content }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq

$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build the web site and verify the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;, &amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms

$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff   94 Sep 29 22:40 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:40 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:40 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:40 public/post/second/index.html

$ cat public/post/first/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;first&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;first&amp;lt;/h1&amp;gt;
  &amp;lt;p&amp;gt;my first post&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

$ cat public/post/second/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;second&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;second&amp;lt;/h1&amp;gt;
  &amp;lt;p&amp;gt;my second post&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the posts now have content. You can go to localhost:1313/post/first to verify.&lt;/p&gt;

&lt;h3 id=&#34;linking-to-content&#34;&gt;Linking to Content&lt;/h3&gt;

&lt;p&gt;The posts are on the home page. Let&amp;rsquo;s add a link from there to the post. Since this is the home page, we&amp;rsquo;ll update its template.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  {{ range first 10 .Data.Pages }}
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
  {{ end }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build the web site and verify the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;, &amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms

$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  149 Sep 29 22:44 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:44 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:44 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:44 public/post/second/index.html

$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;/post/second/&amp;quot;&amp;gt;second&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
  
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;/post/first/&amp;quot;&amp;gt;first&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
  
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-a-post-listing&#34;&gt;Create a Post Listing&lt;/h3&gt;

&lt;p&gt;We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let&amp;rsquo;s make it show a list of all posts (not just the first ten).&lt;/p&gt;

&lt;p&gt;We need to decide which template to update. This will be a listing, so it should be a list template. Let&amp;rsquo;s take a quick look and see which list templates are available.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name list.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don&amp;rsquo;t have multiple content types, so let&amp;rsquo;s stay consistent and update the default list template.&lt;/p&gt;

&lt;h2 id=&#34;creating-top-level-pages&#34;&gt;Creating Top Level Pages&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s add an &amp;ldquo;about&amp;rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).&lt;/p&gt;

&lt;p&gt;The default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let&amp;rsquo;s verify that by creating an &amp;ldquo;about&amp;rdquo; page at the top level:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi content/about.md 
+++
title = &amp;quot;about&amp;quot;
description = &amp;quot;about this site&amp;quot;
date = &amp;quot;2014-09-27&amp;quot;
slug = &amp;quot;about time&amp;quot;
+++

## about us

i&#39;m speechless
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the web site and verify the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find public -name &#39;*.html&#39; | xargs ls -l
-rw-rw-r--  1 mdhender  staff   334 Sep 27 15:08 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff   527 Sep 27 15:08 public/index.html
-rw-rw-r--  1 mdhender  staff   358 Sep 27 15:08 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff     0 Sep 27 15:08 public/post/index.html
-rw-rw-r--  1 mdhender  staff   342 Sep 27 15:08 public/post/second-post/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the page wasn&amp;rsquo;t created at the top level. It was created in a sub-directory named &amp;lsquo;about-time/&amp;rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It&amp;rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.&lt;/p&gt;

&lt;p&gt;One other thing. Take a look at the home page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat public/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/post/theme/&amp;quot;&amp;gt;creating a new theme&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/about-time/&amp;quot;&amp;gt;about&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/post/second-post/&amp;quot;&amp;gt;second&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/post/first-post/&amp;quot;&amp;gt;first&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;script&amp;gt;document.write(&#39;&amp;lt;script src=&amp;quot;http://&#39;
        + (location.host || &#39;localhost&#39;).split(&#39;:&#39;)[0]
		+ &#39;:1313/livereload.js?mindelay=10&amp;quot;&amp;gt;&amp;lt;/&#39;
        + &#39;script&amp;gt;&#39;)&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the &amp;ldquo;about&amp;rdquo; link is listed with the posts? That&amp;rsquo;s not desirable, so let&amp;rsquo;s change that first.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;posts&amp;lt;/h1&amp;gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &amp;quot;post&amp;quot;}}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}

  &amp;lt;h1&amp;gt;pages&amp;lt;/h1&amp;gt;
  {{ range .Data.Pages }}
    {{ if eq .Type &amp;quot;page&amp;quot; }}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.&lt;/p&gt;

&lt;p&gt;But, that about page still renders to about-time/index.html.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find public -name &#39;*.html&#39; | xargs ls -l
-rw-rw-r--  1 mdhender  staff    334 Sep 27 15:33 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff    645 Sep 27 15:33 public/index.html
-rw-rw-r--  1 mdhender  staff    358 Sep 27 15:33 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff      0 Sep 27 15:33 public/post/index.html
-rw-rw-r--  1 mdhender  staff    342 Sep 27 15:33 public/post/second-post/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let&amp;rsquo;s do it the hard way and change the permalink in the configuration file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi config.toml
[permalinks]
	page = &amp;quot;/:title/&amp;quot;
	about = &amp;quot;/:filename/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the web site and verify that this didn&amp;rsquo;t work. Hugo lets &amp;ldquo;slug&amp;rdquo; or &amp;ldquo;URL&amp;rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.&lt;/p&gt;

&lt;h2 id=&#34;sharing-templates&#34;&gt;Sharing Templates&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn&amp;rsquo;t. That&amp;rsquo;s because we didn&amp;rsquo;t put the title in the home page&amp;rsquo;s template (layouts/index.html). That&amp;rsquo;s an easy thing to do, but let&amp;rsquo;s look at a different option.&lt;/p&gt;

&lt;p&gt;We can put the common bits into a shared template that&amp;rsquo;s stored in the themes/zafta/layouts/partials/ directory.&lt;/p&gt;

&lt;h3 id=&#34;create-the-header-and-footer-partials&#34;&gt;Create the Header and Footer Partials&lt;/h3&gt;

&lt;p&gt;In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme&amp;rsquo;s presentation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/partials/header.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
:wq

$ vi themes/zafta/layouts/partials/footer.html
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-the-home-page-template-to-use-the-partials&#34;&gt;Update the Home Page Template to Use the Partials&lt;/h3&gt;

&lt;p&gt;The most noticeable difference between a template call and a partials call is the lack of path:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;theme/partials/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;versus&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ partial &amp;quot;header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Both pass in the context.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s change the home page template to use these new partials.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;posts&amp;lt;/h1&amp;gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &amp;quot;post&amp;quot;}}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}

  &amp;lt;h1&amp;gt;pages&amp;lt;/h1&amp;gt;
  {{ range .Data.Pages }}
    {{ if or (eq .Type &amp;quot;page&amp;quot;) (eq .Type &amp;quot;about&amp;quot;) }}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the web site and verify the results. The title on the home page is now &amp;ldquo;your title here&amp;rdquo;, which comes from the &amp;ldquo;title&amp;rdquo; variable in the config.toml file.&lt;/p&gt;

&lt;h3 id=&#34;update-the-default-single-template-to-use-the-partials&#34;&gt;Update the Default Single Template to Use the Partials&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/_default/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.&lt;/p&gt;

&lt;h2 id=&#34;add-date-published-to-posts&#34;&gt;Add “Date Published” to Posts&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s common to have posts display the date that they were written or published, so let&amp;rsquo;s add that. The front matter of our posts has a variable named &amp;ldquo;date.&amp;rdquo; It&amp;rsquo;s usually the date the content was created, but let&amp;rsquo;s pretend that&amp;rsquo;s the value we want to display.&lt;/p&gt;

&lt;h3 id=&#34;add-date-published-to-the-template&#34;&gt;Add “Date Published” to the Template&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;ll start by updating the template used to render the posts. The template code will look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ .Date.Format &amp;quot;Mon, Jan 2, 2006&amp;quot; }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Posts use the default single template, so we&amp;rsquo;ll change that file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/_default/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  &amp;lt;h2&amp;gt;{{ .Date.Format &amp;quot;Mon, Jan 2, 2006&amp;quot; }}&amp;lt;/h2&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate the web site and verify the results. The posts now have the date displayed in them. There&amp;rsquo;s a problem, though. The &amp;ldquo;about&amp;rdquo; page also has the date displayed.&lt;/p&gt;

&lt;p&gt;As usual, there are a couple of ways to make the date display only on posts. We could do an &amp;ldquo;if&amp;rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;if&amp;rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of &amp;ldquo;code for today,&amp;rdquo; too.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s assume, though, that we&amp;rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we&amp;rsquo;re going to create a section template.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s restore the default single template before we forget.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir themes/zafta/layouts/post
$ vi themes/zafta/layouts/_default/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we&amp;rsquo;ll update the post&amp;rsquo;s version of the single template. If you remember Hugo&amp;rsquo;s rules, the template engine will use this version over the default.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/post/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  &amp;lt;h2&amp;gt;{{ .Date.Format &amp;quot;Mon, Jan 2, 2006&amp;quot; }}&amp;lt;/h2&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn&amp;rsquo;t.&lt;/p&gt;

&lt;h3 id=&#34;don-t-repeat-yourself&#34;&gt;Don&amp;rsquo;t Repeat Yourself&lt;/h3&gt;

&lt;p&gt;DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you&amp;rsquo;re figuring that out, accept that you&amp;rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it&amp;rsquo;s okay to delay splitting up a template.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://blog.maoxianplay.com/2014/goisforlovers/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2014/goisforlovers/</guid>
      <description>

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;This document is a brief primer on using go templates. The &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;go docs&lt;/a&gt;
provide more details.&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-go-templates&#34;&gt;Introduction to Go Templates&lt;/h2&gt;

&lt;p&gt;Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that go templates parse very quickly.&lt;/p&gt;

&lt;p&gt;A unique characteristic of go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;go docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;

&lt;p&gt;Go lang templates are html files with the addition of variables and
functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go variables and functions are accessible within {{ }}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ foo }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parameters are separated using spaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calling the add function with input of 1, 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Methods and fields are accessed via dot notation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing the Page Parameter &amp;ldquo;bar&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ .Params.bar }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parentheses can be used to group items together&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;variables&#34;&gt;Variables&lt;/h2&gt;

&lt;p&gt;Each go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
&lt;a href=&#34;https://blog.maoxianplay.com/layout/variables&#34;&gt;variables&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;A variable is accessed by referencing the variable name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variables can also be defined and referenced.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $address := &amp;quot;123 Main St.&amp;quot;}}
{{ $address }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Go template ship with a few functions which provide basic functionality. The go
template system also provides a mechanism for applications to extend the
available functions with their own. &lt;a href=&#34;https://blog.maoxianplay.com/layout/functions&#34;&gt;Hugo template
functions&lt;/a&gt; provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;includes&#34;&gt;Includes&lt;/h2&gt;

&lt;p&gt;When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;chrome/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logic&#34;&gt;Logic&lt;/h2&gt;

&lt;p&gt;Go templates provide the most basic iteration and conditional logic.&lt;/p&gt;

&lt;h3 id=&#34;iteration&#34;&gt;Iteration&lt;/h3&gt;

&lt;p&gt;Just like in go, the go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1: Using Context&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ range array }} 
    {{ . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $element := array}} 
    {{ $element }} 
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring key and value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $index, $element := array}}
    {{ $index }} 
    {{ $element }} 
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conditionals&#34;&gt;Conditionals&lt;/h3&gt;

&lt;p&gt;If, else, with, or, &amp;amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go Templates treat the following values as false:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;any array, slice, map, or string of length zero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1: If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: If -&amp;gt; Else&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }} 
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{else}}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 3: And &amp;amp; Or&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 4: With&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent.&lt;/p&gt;

&lt;p&gt;The first example above could be simplified as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 5: If -&amp;gt; Else If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }} 
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{ else if isset .Params &amp;quot;caption&amp;quot; }}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pipes&#34;&gt;Pipes&lt;/h2&gt;

&lt;p&gt;One of the most powerful components of go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the
input of the following pipe.&lt;/p&gt;

&lt;p&gt;Because of the very simple syntax of go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.&lt;/p&gt;

&lt;p&gt;A few simple examples should help convey how to use the pipe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if eq 1 1 }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is the same as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ eq 1 1 | if }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 3 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Could be rewritten as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{  isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; | or isset .Params &amp;quot;attr&amp;quot; | if }}
Stuff Here 
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;Context (aka. the dot)&lt;/h2&gt;

&lt;p&gt;The most easily overlooked concept to understand about go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize }}&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.&lt;/p&gt;

&lt;h1 id=&#34;hugo-parameters&#34;&gt;Hugo Parameters&lt;/h1&gt;

&lt;p&gt;Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.&lt;/p&gt;

&lt;h2 id=&#34;using-content-page-parameters&#34;&gt;Using Content (page) Parameters&lt;/h2&gt;

&lt;p&gt;In each piece of content you can provide variables to be used by the
templates. This happens in the &lt;a href=&#34;https://blog.maoxianplay.com/content/front-matter&#34;&gt;front matter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.&lt;/p&gt;

&lt;p&gt;Here is the example front matter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Permalinks&amp;quot;
date: &amp;quot;2013-11-18&amp;quot;
aliases:
  - &amp;quot;/doc/permalinks/&amp;quot;
groups: [&amp;quot;extras&amp;quot;]
groups_weight: 30
notoc: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the corresponding code inside of the template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ if not .Params.notoc }}
    &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt;
    {{ .TableOfContents }}
    &amp;lt;/div&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-site-config-parameters&#34;&gt;Using Site (config) Parameters&lt;/h2&gt;

&lt;p&gt;In your top-level configuration file (eg, &lt;code&gt;config.yaml&lt;/code&gt;) you can define site
parameters, which are values which will be available to you in chrome.&lt;/p&gt;

&lt;p&gt;For instance, you might declare:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;params:
  CopyrightHTML: &amp;quot;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;quot;
  TwitterUser: &amp;quot;spf13&amp;quot;
  SidebarRecentLimit: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within a footer layout, you might then declare a &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; which is only
provided if the &lt;code&gt;CopyrightHTML&lt;/code&gt; parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt;
&amp;lt;/footer&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot;
 alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do
so, such as in this example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{end}}&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://blog.maoxianplay.com/2014/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2014/hugoisforlovers/</guid>
      <description>

&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Goto &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://blog.maoxianplay.com/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-2-build-the-docs&#34;&gt;Step 2. Build the Docs&lt;/h2&gt;

&lt;p&gt;Hugo has its own example site which happens to also be the documentation site
you are reading right now.&lt;/p&gt;

&lt;p&gt;Follow the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone the &lt;a href=&#34;http://github.com/spf13/hugo&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;hugo repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go into the repo&lt;/li&gt;
&lt;li&gt;Run hugo in server mode and build the docs&lt;/li&gt;
&lt;li&gt;Open your browser to &lt;a href=&#34;http://localhost:1313&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Corresponding pseudo commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/spf13/hugo
cd hugo
/path/to/where/you/installed/hugo server --source=./docs
&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 27 ms
&amp;gt; Web Server is available at http://localhost:1313
&amp;gt; Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you&amp;rsquo;ve gotten here, follow along the rest of this page on your local build.&lt;/p&gt;

&lt;h2 id=&#34;step-3-change-the-docs-site&#34;&gt;Step 3. Change the docs site&lt;/h2&gt;

&lt;p&gt;Stop the Hugo process by hitting ctrl+c.&lt;/p&gt;

&lt;p&gt;Now we are going to run hugo again, but this time with hugo in watch mode.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/path/to/hugo/from/step/1/hugo server --source=./docs --watch
&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 27 ms
&amp;gt; Web Server is available at http://localhost:1313
&amp;gt; Watching for changes in /Users/spf13/Code/hugo/docs/content
&amp;gt; Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open your &lt;a href=&#34;http://vim.spf13.com&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;favorite editor&lt;/a&gt; and change one of the source
content pages. How about changing this very file to &lt;em&gt;fix the typo&lt;/em&gt;. How about changing this very file to &lt;em&gt;fix the typo&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Content files are found in &lt;code&gt;docs/content/&lt;/code&gt;. Unless otherwise specified, files
are located at the same relative location as the url, in our case
&lt;code&gt;docs/content/overview/quickstart.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Change and save this file.. Notice what happened in your terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; Change detected, rebuilding site

&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 26 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Refresh the browser and observe that the typo is now fixed.&lt;/p&gt;

&lt;p&gt;Notice how quick that was. Try to refresh the site before it&amp;rsquo;s finished building.. I double dare you.
Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.&lt;/p&gt;

&lt;h2 id=&#34;step-4-have-fun&#34;&gt;Step 4. Have fun&lt;/h2&gt;

&lt;p&gt;The best way to learn something is to play with it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://blog.maoxianplay.com/2014/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.maoxianplay.com/2014/migrate-from-jekyll/</guid>
      <description>

&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;should become&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ static/
        ▾ images/
            logo.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-your-hugo-configuration-file&#34;&gt;Create your Hugo configuration file&lt;/h2&gt;

&lt;p&gt;Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the &lt;a href=&#34;https://blog.maoxianplay.com/overview/configuration/&#34;&gt;Hugo configuration documentation&lt;/a&gt; for details.&lt;/p&gt;

&lt;h2 id=&#34;set-your-configuration-publish-folder-to-site&#34;&gt;Set your configuration publish folder to &lt;code&gt;_site&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The default is for Jekyll to publish to &lt;code&gt;_site&lt;/code&gt; and for Hugo to publish to &lt;code&gt;public&lt;/code&gt;. If, like me, you have &lt;a href=&#34;http://blog.blindgaenger.net/generate_github_pages_in_a_submodule.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;_site&lt;/code&gt; mapped to a git submodule on the &lt;code&gt;gh-pages&lt;/code&gt; branch&lt;/a&gt;, you&amp;rsquo;ll want to do one of two alternatives:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Change your submodule to point to map &lt;code&gt;gh-pages&lt;/code&gt; to public instead of &lt;code&gt;_site&lt;/code&gt; (recommended).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule deinit _site
git rm _site
git submodule add -b gh-pages git@github.com:your-username/your-repo.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Or, change the Hugo configuration to use &lt;code&gt;_site&lt;/code&gt; instead of &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    ..
    &amp;quot;publishdir&amp;quot;: &amp;quot;_site&amp;quot;,
    ..
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;convert-jekyll-templates-to-hugo-templates&#34;&gt;Convert Jekyll templates to Hugo templates&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to &lt;a href=&#34;http://jekyllrb.com/docs/templates/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Jekyll&amp;rsquo;s template documentation&lt;/a&gt; if you need to refresh your memory on how you built your blog and &lt;a href=&#34;https://blog.maoxianplay.com/layout/templates/&#34;&gt;Hugo&amp;rsquo;s template&lt;/a&gt; to learn Hugo&amp;rsquo;s way.&lt;/p&gt;

&lt;p&gt;As a single reference data point, converting my templates for &lt;a href=&#34;http://heyitsalex.net/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;heyitsalex.net&lt;/a&gt; took me no more than a few hours.&lt;/p&gt;

&lt;h2 id=&#34;convert-jekyll-plugins-to-hugo-shortcodes&#34;&gt;Convert Jekyll plugins to Hugo shortcodes&lt;/h2&gt;

&lt;p&gt;Jekyll has &lt;a href=&#34;http://jekyllrb.com/docs/plugins/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;plugins&lt;/a&gt;; Hugo has &lt;a href=&#34;https://blog.maoxianplay.com/doc/shortcodes/&#34;&gt;shortcodes&lt;/a&gt;. It&amp;rsquo;s fairly trivial to do a port.&lt;/p&gt;

&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;

&lt;p&gt;As an example, I was using a custom &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/blob/74bb12036a71334fdb7dba84e073382fc06908ec/_plugins/image_tag.rb&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;image_tag&lt;/code&gt;&lt;/a&gt; plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.&lt;/p&gt;

&lt;p&gt;Jekyll&amp;rsquo;s plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Jekyll
  class ImageTag &amp;lt; Liquid::Tag
    @url = nil
    @caption = nil
    @class = nil
    @link = nil
    // Patterns
    IMAGE_URL_WITH_CLASS_AND_CAPTION =
    IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\w+)(\s+)((https?:\/\/|\/)(\S+))(\s+)&amp;quot;(.*?)&amp;quot;(\s+)-&amp;gt;((https?:\/\/|\/)(\S+))(\s*)/i
    IMAGE_URL_WITH_CAPTION = /((https?:\/\/|\/)(\S+))(\s+)&amp;quot;(.*?)&amp;quot;/i
    IMAGE_URL_WITH_CLASS = /(\w+)(\s+)((https?:\/\/|\/)(\S+))/i
    IMAGE_URL = /((https?:\/\/|\/)(\S+))/i
    def initialize(tag_name, markup, tokens)
      super
      if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK
        @class   = $1
        @url     = $3
        @caption = $7
        @link = $9
      elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION
        @class   = $1
        @url     = $3
        @caption = $7
      elsif markup =~ IMAGE_URL_WITH_CAPTION
        @url     = $1
        @caption = $5
      elsif markup =~ IMAGE_URL_WITH_CLASS
        @class = $1
        @url   = $3
      elsif markup =~ IMAGE_URL
        @url = $1
      end
    end
    def render(context)
      if @class
        source = &amp;quot;&amp;lt;figure class=&#39;#{@class}&#39;&amp;gt;&amp;quot;
      else
        source = &amp;quot;&amp;lt;figure&amp;gt;&amp;quot;
      end
      if @link
        source += &amp;quot;&amp;lt;a href=\&amp;quot;#{@link}\&amp;quot;&amp;gt;&amp;quot;
      end
      source += &amp;quot;&amp;lt;img src=\&amp;quot;#{@url}\&amp;quot;&amp;gt;&amp;quot;
      if @link
        source += &amp;quot;&amp;lt;/a&amp;gt;&amp;quot;
      end
      source += &amp;quot;&amp;lt;figcaption&amp;gt;#{@caption}&amp;lt;/figcaption&amp;gt;&amp;quot; if @caption
      source += &amp;quot;&amp;lt;/figure&amp;gt;&amp;quot;
      source
    end
  end
end
Liquid::Template.register_tag(&#39;image&#39;, Jekyll::ImageTag)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is written as this Hugo shortcode:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- image --&amp;gt;
&amp;lt;figure {{ with .Get &amp;quot;class&amp;quot; }}class=&amp;quot;{{.}}&amp;quot;{{ end }}&amp;gt;
    {{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }}
        &amp;lt;img src=&amp;quot;{{ .Get &amp;quot;src&amp;quot; }}&amp;quot; {{ if or (.Get &amp;quot;alt&amp;quot;) (.Get &amp;quot;caption&amp;quot;) }}alt=&amp;quot;{{ with .Get &amp;quot;alt&amp;quot;}}{{.}}{{else}}{{ .Get &amp;quot;caption&amp;quot; }}{{ end }}&amp;quot;{{ end }} /&amp;gt;
    {{ if .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }}
    {{ if or (or (.Get &amp;quot;title&amp;quot;) (.Get &amp;quot;caption&amp;quot;)) (.Get &amp;quot;attr&amp;quot;)}}
    &amp;lt;figcaption&amp;gt;{{ if isset .Params &amp;quot;title&amp;quot; }}
        {{ .Get &amp;quot;title&amp;quot; }}{{ end }}
        {{ if or (.Get &amp;quot;caption&amp;quot;) (.Get &amp;quot;attr&amp;quot;)}}&amp;lt;p&amp;gt;
        {{ .Get &amp;quot;caption&amp;quot; }}
        {{ with .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt; {{ end }}
            {{ .Get &amp;quot;attr&amp;quot; }}
        {{ if .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;/a&amp;gt; {{ end }}
        &amp;lt;/p&amp;gt; {{ end }}
    &amp;lt;/figcaption&amp;gt;
    {{ end }}
&amp;lt;/figure&amp;gt;
&amp;lt;!-- image --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;I simply changed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg &amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were &amp;quot;having fun&amp;quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; -&amp;gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to this (this example uses a slightly extended version named &lt;code&gt;fig&lt;/code&gt;, different than the built-in &lt;code&gt;figure&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fig class=&amp;quot;full&amp;quot; src=&amp;quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&amp;quot; title=&amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; link=&amp;quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/&amp;quot; %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As a bonus, the shortcode named parameters are, arguably, more readable.&lt;/p&gt;

&lt;h2 id=&#34;finishing-touches&#34;&gt;Finishing touches&lt;/h2&gt;

&lt;h3 id=&#34;fix-content&#34;&gt;Fix content&lt;/h3&gt;

&lt;p&gt;Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that &lt;code&gt;hugo server --watch&lt;/code&gt; is your friend. Test your changes and fix errors as needed.&lt;/p&gt;

&lt;h3 id=&#34;clean-up&#34;&gt;Clean up&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn&amp;rsquo;t used, delete it.&lt;/p&gt;

&lt;h2 id=&#34;a-practical-example-in-a-diff&#34;&gt;A practical example in a diff&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://heyitsalex.net/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hey, it&amp;rsquo;s Alex&lt;/a&gt; was migrated in less than a &lt;em&gt;father-with-kids day&lt;/em&gt; from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/compare/869d69435bd2665c3fbf5b5c78d4c22759d7613a...b7f6605b1265e83b4b81495423294208cc74d610&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;diff&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>