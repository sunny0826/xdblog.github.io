<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k3s on GuoXD Blog</title>
    <link>https://guoxudong.io/en/tags/k3s/</link>
    <description>Recent content in k3s on GuoXD Blog</description>
    <generator>Source Themes academia (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>&lt;a rel=&#39;license&#39; href=&#39;http://creativecommons.org/licenses/by-nc/4.0/&#39; target=&#39;_blank&#39;&gt;知识共享署名-非商业性使用 4.0 国际许可协议&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 17 Feb 2020 11:51:39 +0800</lastBuildDate>
    
	    <atom:link href="https://guoxudong.io/en/tags/k3s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>K3d&#43;Kubecm 本地开发运维两不误</title>
      <link>https://guoxudong.io/en/post/k3d-k3s-kubecm/</link>
      <pubDate>Mon, 17 Feb 2020 11:51:39 +0800</pubDate>
      
      <guid>https://guoxudong.io/en/post/k3d-k3s-kubecm/</guid>
      <description>

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;k3s 是由 Rancher Labs 于2019年年初推出的一款轻量级 Kubernetes 发行版，满足在边缘计算环境中运行在 x86、ARM64 和 ARMv7 处理器上的小型、易于管理的 Kubernetes 集群日益增长的需求。&lt;/p&gt;

&lt;p&gt;k3s 除了在边缘计算领域的应用外，在研发侧的表现也十分出色。我们可以快速在本地拉起一个轻量级的 k8s 集群，而 k3d 则是 k3s 社区创建的一个小工具，可以在一个 docker 进程中运行整个 k3s 集群，相比直接使用 k3s 运行在本地，更好管理和部署。&lt;/p&gt;

&lt;p&gt;在日常工作中，时长要在本地集群和多个远程集群之间切换来完成运维工作，这时使用 &lt;code&gt;kubecm&lt;/code&gt; 快速将 k3s 集群的 kubeconfig 与现有集群的 kubeconfig 合并，并可快速切换集群，开发运维两不误。&lt;/p&gt;

&lt;h2 id=&#34;安装-k3d&#34;&gt;安装 k3d&lt;/h2&gt;

&lt;p&gt;k3d 提供了多种安装方式，十分方便。&lt;/p&gt;

&lt;h3 id=&#34;使用脚本安装&#34;&gt;使用脚本安装&lt;/h3&gt;

&lt;p&gt;直接使用 &lt;code&gt;wget&lt;/code&gt; 和 &lt;code&gt;curl&lt;/code&gt; 安装&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
# 或
curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定版本&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | TAG=v1.3.4 bash
# 或
curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | TAG=v1.3.4 bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;使用-homebrew-安装&#34;&gt;使用 Homebrew 安装&lt;/h3&gt;

&lt;p&gt;MacOS 或安装了 Homebrew 的 Linux 可以使用 brew 安装：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install k3d
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;

&lt;p&gt;还可以直接前往 &lt;a href=&#34;https://github.com/rancher/k3d/releases&#34; target=&#34;_blank&#34;&gt;release 页面&lt;/a&gt; 下载二进制可执行文件，或者直接使用 &lt;code&gt;go install github.com/rancher/k3d&lt;/code&gt; 安装。&lt;/p&gt;

&lt;h2 id=&#34;创建-k3s-集群&#34;&gt;创建 k3s 集群&lt;/h2&gt;

&lt;p&gt;创建 k3s 集群也十分简单，一行命令就可拉起，速度非常快。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;$ k3d create -n k3s-local
INFO[0000] Created cluster network with ID facae4a046b169721805f93ec21ba1acb65b9efb8cf35866529178cb0fba75a9
INFO[0000] Created docker volume  k3d-k3s-local-images
INFO[0000] Creating cluster [k3s-local]
INFO[0000] Creating server using docker.io/rancher/k3s:v1.0.1...
INFO[0000] SUCCESS: created cluster [k3s-local]
INFO[0000] You can now use the cluster with:

export KUBECONFIG=&amp;quot;$(k3d get-kubeconfig --name=&#39;k3s-local&#39;)&amp;quot;
kubectl cluster-info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是一般情况下，如果没有梯子的话，k3s 集群虽然拉起来很快，但因为拉不到镜像，集群组件都无法正常拉起。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;$ export KUBECONFIG=&amp;quot;$(k3d get-kubeconfig --name=&#39;k3s-local&#39;)&amp;quot;
$ kubectl get pod -n kube-system
NAME                                      READY   STATUS              RESTARTS   AGE
helm-install-traefik-8wxmr                0/1     ContainerCreating   0          3m30s
metrics-server-6d684c7b5-j4sc7            0/1     ContainerCreating   0          3m30s
coredns-d798c9dd-j6lpw                    0/1     ContainerCreating   0          3m30s
local-path-provisioner-58fb86bdfd-wv7sw   0/1     ContainerCreating   0          3m30s
$ kubectl describe pod coredns-d798c9dd-j6lpw -n kube-system
...
Events:
  Type     Reason                  Age                 From                           Message
  ----     ------                  ----                ----                           -------
  Normal   Scheduled               &amp;lt;unknown&amp;gt;           default-scheduler              Successfully assigned kube-system/coredns-d798c9dd-j6lpw to k3d-k3s-local-server
  Warning  FailedCreatePodSandBox  7s (x7 over 4m30s)  kubelet, k3d-k3s-local-server  Failed create pod sandbox: rpc error: code = Unknown desc = failed to get sandbox image &amp;quot;k8s.gcr.io/pause:3.1&amp;quot;: failed to pull image &amp;quot;k8s.gcr.io/pause:3.1&amp;quot;: failed to pull and unpack image &amp;quot;k8s.gcr.io/pause:3.1&amp;quot;: failed to resolve reference &amp;quot;k8s.gcr.io/pause:3.1&amp;quot;: failed to do request: Head https://k8s.gcr.io/v2/pause/manifests/3.1: dial tcp 64.233.189.82:443: i/o timeout
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;离线安装&#34;&gt;离线安装&lt;/h3&gt;

&lt;p&gt;如果没有梯子的话，就只能选择使用离线安装。&lt;/p&gt;

&lt;h4 id=&#34;下载离线镜像&#34;&gt;下载离线镜像&lt;/h4&gt;

&lt;p&gt;前往 &lt;a href=&#34;https://github.com/rancher/k3s/releases&#34; target=&#34;_blank&#34;&gt;release 页面&lt;/a&gt; 下载指定版本的镜像，这里我们下载最新的 &lt;a href=&#34;https://github.com/rancher/k3s/releases/tag/v1.17.2%2Bk3s1&#34; target=&#34;_blank&#34;&gt;v1.17.2+k3s1&lt;/a&gt; 镜像。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://tvax1.sinaimg.cn/large/ad5fbf65gy1gbzdedmqpdj20sh0k776o.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;下载到 &lt;code&gt;~/airgap&lt;/code&gt; 目录中，并进行解压，将解压后的目录重命名为 &lt;code&gt;1.17.2&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;运行离线镜像&#34;&gt;运行离线镜像&lt;/h3&gt;

&lt;p&gt;这里再次运行 k3d，部署 k3s 集群。这里要注意的是，挂载离线镜像的话，必须使用 &lt;code&gt;-i&lt;/code&gt; flag 来指定镜像版本，这里我们使用的是 &lt;a href=&#34;https://github.com/rancher/k3s/releases/tag/v1.17.2%2Bk3s1&#34; target=&#34;_blank&#34;&gt;v1.17.2+k3s1&lt;/a&gt; 版本，而镜像的 tag 则是 &lt;code&gt;v1.17.2-k3s1&lt;/code&gt;，如果不确定 tag，可以去 &lt;a href=&#34;https://hub.docker.com/r/rancher/k3s/tags&#34; target=&#34;_blank&#34;&gt;DockerHub&lt;/a&gt; 上查看。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;$ k3d create -n k3s-local -i rancher/k3s:v1.17.2-k3s1  -v $(pwd)/airgap/v1.17.2/:/var/lib/rancher/k3s/agent/images/
INFO[0000] Created cluster network with ID 10b3fca995fcb491ae1fe1c901672bf6f0a0fd6f51785ba8403947d2773ebd43
INFO[0000] Created docker volume  k3d-k3s-local-images
INFO[0000] Creating cluster [k3s-local]
INFO[0000] Creating server using docker.io/rancher/k3s:v1.17.2-k3s1...
INFO[0000] SUCCESS: created cluster [k3s-local]
INFO[0000] You can now use the cluster with:

export KUBECONFIG=&amp;quot;$(k3d get-kubeconfig --name=&#39;k3s-local&#39;)&amp;quot;
kubectl cluster-info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看 k3s 集群组件启动状态：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;$ export KUBECONFIG=&amp;quot;$(k3d get-kubeconfig --name=&#39;k3s-local&#39;)&amp;quot;
$ kubectl get pod -A -w
NAMESPACE     NAME                                      READY   STATUS              RESTARTS   AGE
kube-system   local-path-provisioner-58fb86bdfd-7jzbw   0/1     ContainerCreating   0          6m35s
kube-system   coredns-d798c9dd-jhmds                    1/1     Running             0          6m35s
kube-system   metrics-server-6d684c7b5-4x2cd            1/1     Running             0          6m35s
kube-system   traefik-6787cddb4b-9v7r4                  0/1     ContainerCreating   0          16s
kube-system   svclb-traefik-fzrqj                       0/2     ContainerCreating   0          15s
kube-system   helm-install-traefik-h8k2j                0/1     Completed           0          6m35s
kube-system   svclb-traefik-fzrqj                       2/2     Running             0          21s
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;使用-kubecm&#34;&gt;使用 kubecm&lt;/h2&gt;

&lt;p&gt;在 k3s 集群启动成功后，使用 &lt;a href=&#34;https://github.com/sunny0826/kubecm&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;kubecm&lt;/code&gt;&lt;/a&gt;，将 k3s 的 kubeconfig 与现有 kubeconfig 合并。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubecm add -f $(k3d get-kubeconfig --name=&#39;k3s-local&#39;) -n k3s -c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;切换集群，选择 k3s。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;$ kubecm s
Use the arrow keys to navigate: ↓ ↑ → ←  and / toggles search
Select Kube Context
  😼 k3s(*)
    prod-tg
    test
↓   banma

--------- Info ----------
Name:           k3s
Cluster:        cluster-485d6mhcfm
User:           user-485d6mhcfm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在就可以在本地使用 k3s 集群进行开发工作，而有运维工作的时候，使用 &lt;code&gt;kubecm switch&lt;/code&gt; 快速切换集群。&lt;/p&gt;

&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://tva3.sinaimg.cn/large/ad5fbf65gy1gbzegsyex5j20x90n70vv.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;k3s 同时支持 &lt;strong&gt;x86_64&lt;/strong&gt;、&lt;strong&gt;ARM64&lt;/strong&gt; 和 &lt;strong&gt;ARMv7&lt;/strong&gt; 架构，它可以十分灵活地跨任何边缘基础架构工作。不提 k3s 在边缘计算领域的应用，与之前使用的 &lt;a href=&#34;https://github.com/kubernetes/minikube&#34; target=&#34;_blank&#34;&gt;minikube&lt;/a&gt; 相比，k3s 裁剪掉了许多用不到的功能，并且安装更简单，启动更快，空间占用也更小。相信 k3s 在开发侧的作用也会越来越大，使云原生应用的开发更加的便利。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
